# mk.config - This this the configuration file for making the SRB software.
# This file is included by the main Makefile.

# installDir is the absolute path of the SRB install directory. After the
# the build, type in "gmake install" to install the software into this
# directory.
installDir=/projects/diglib/srb/SRB1_1_4t

# PORTNAME defines the OS platform of this SRB port.
# Valid PORTNAME are PORTNAME_solaris, PORTNAME_sunos, PORTNAME_aix
# PORTNAME_alpha, PORTNAME_c90 (both c90 and t3e use this switch), PORTNAME_sgi
# aix port
PORTNAME=PORTNAME_solaris

# ORAMCAT deines that this SRB server being built is MDAS enabled and the MCAT 
# is stored in Oracle DBMS. Normally, only one SRB server is MDAS enabled.
ORAMCAT = 1

ifdef ORAMCAT
SRB_MDAS = 1
ORA_DBMS = 1
DBMS_INCLUDE+= -DORAMCAT
endif

# DB2MCAT deines that this SRB server being built is MDAS enabled and the MCAT 
# is stored in Oracle DBMS. Normally, only one SRB server is MDAS enabled.
# DB2MCAT = 1

ifdef DB2MCAT
SRB_MDAS = 1
DB2_DBMS = 1
DBMS_INCLUDE+= -DDB2MCAT
endif

# MDAS_DEBUG - If this flag is set, will write debug log.
ifdef SRB_MDAS
MDAS_DEBUG = 1
endif

# UTREE defines whether this SRB server can access UniTree storage system. 
# Comment it out if the SRB server does not support UniTree Access.
# UTREE = 1

# The following is needed only if UTREE is defined. UTREEDIR specifies
# where the UniTree libraries are located and UTREE_HDR_DIR specifies where
# the UniTree header directory is located.

ifdef UTREE
UTREEDIR=/scratch0/mwan/unitree
UTREE_HDR_DIR=/scratch0/mwan/unitree/src/sdsc/lib/libnsltree/hdr
endif
 
# HPSS defines whether this SRB server can access HPSS storage system. 
# Comment it out if the SRB server does not support HPSS Access.
# HPSS=2
 
# The following is needed only if HPSS is defined. HPSS_LIB_DIR specifies
# where the HPSS libraries are located. ENCINA_LIB_DIR specifies where
# encina libraries are located. HPSS_HDR_DIR, DCE_HDR_DIR and ENCINA_HDR_DIR
# specifies where the header directories for HPSS, DCE and ENCINA, 
# respectively,are located.

ifdef HPSS
HPSS_LIB_DIR = /usr/lib
ENCINA_LIB_DIR=/usr/lpp/encina/lib
HPSS_HDR_DIR = /usr/lpp/hpss/include
# HPSS_HDR_DIR = /hpss_temp/build/aix4.1/include
DCE_HDR_DIR = /usr/include/dce
ENCINA_HDR_DIR = /usr/lpp/encina/include
endif

# FTP defines whether this SRB server support FTP access.
# Comment it out if the SRB server does not support FTP Access.
FTP = 3

# HTTP defines whether this SRB server support HTTP access.
# Comment it out if the SRB server does not support HTTP Access.
HTTP = 4

# DB_DB2 defines whether this SRB server support DB2_LOBJ access.
# Comment it out if the SRB server does not support DB2_LOBJ Access.
# DB_DB2 = 0

ifdef DB_DB2
DB2_DBMS = 1
DBMS_INCLUDE+= -DDB_DB2=0
endif

# DB_Illustra defines whether this SRB server support ILLUSTRA_LOBJ access.
# Comment it out if the SRB server does not support ILLUSTRA_LOBJ Access.
# DB_Illustra = 1

ifdef DB_Illustra
ILLUS_DBMS = 1
DBMS_INCLUDE+= -DDB_Illustra=1
endif

# DB_Oracle defines whether this SRB server support ORACLE_LOBJ access.
# Comment it out if the SRB server does not support ORACLE_LOBJ Access.
# XXXXX - Currently, ORACLE_LOBJ works only on the SGI platform.
DB_Oracle = 1

ifdef DB_Oracle
ORA_DBMS = 1
DBMS_INCLUDE+= -DDB_Oracle=1
endif


# The following is needed only if DB_Illustra is defined. ILLUS_LIB_DIR
# specifies where the Illustra libraries are located and ILLUS_HDR_DIR 
# specifies where the Illustra header directory is located.

ifdef ILLUS_DBMS
ILLUS_LIB_DIR = /misc/illustra/lib
ILLUS_HDR_DIR = /misc/illustra/h
DBMS_LIB+= -L$(ILLUS_LIB_DIR) -lmi -L/usr/lib -ldl
DBMS_INCLUDE+= -I$(ILLUS_HDR_DIR)
endif

# The following is needed only if DB2_DBMS is defined. DB2_LIB_DIR
# specifies where the DB2 libraries are located and DB2_HDR_DIR
# specifies where the DB2 header directory is located.

ifdef DB2_DBMS
DB2_LIB_DIR = /projects/doct/db2/v2/home/sqllib/lib
DB2_HDR_DIR = /projects/doct/db2/v2/home/sqllib/include
DBMS_LIB+= -L$(DB2_LIB_DIR) -ldb2
DBMS_INCLUDE+= -I$(DB2_HDR_DIR)
endif

ifdef ORA_DBMS
ORA_LIB_DIR = /usr/local/apps/oracle/app/oracle/product/7.3.3
DBMS_LIB+= -L$(ORA_LIB_DIR)/lib         \
        -L$(ORA_LIB_DIR)/rdbms/lib      \
        -lclient        \
        -lsqlnet        \
        -lncr          \
        -lsqlnet        \
        -lclient        \
        -lcommon        \
        -lcommon        \
        -lgeneric       \
        -lsqlnet        \
        -lncr           \
        -lsqlnet        \
        -lclient        \
        -lcommon        \
        -lgeneric       \
        -lepc           \
        -lnlsrtl3       \
        -lc3v6          \
        -lcore3         \
        -lnlsrtl3       \
        -lcore3         \
        -lnlsrtl3       \
        -lsocket        \
        -lnsl           \
        -lm -ldl -lposix4 -lsunmath     \
        -lm -lcore3 -lsocket -lnsl      \
        -lm -ldl -lposix4 -lsunmath     \
        -R /opt/SUNWcluster/lib:$(ORA_LIB_DIR)/lib      \
        -Y P,/usr/lib:/usr/openwin/lib:/usr/dt/lib:/usr/local/lib:/opt/SUNWcluster/lib:/usr/ccs/lib:/usr/lib      \
        -Qy -lc $(ORA_LIB_DIR)/lib/crtn.o
endif


# HOST_BASED_AUTH - defines whether the host based authorization should be 
# used. Host based authorization uses the file data/hostAuthConfig to
# configure which client and from which hosts is allowed to connect to
# this SRB server. Comment it out if the SRB server does not support host 
# based authorization.
# HOST_BASED_AUTH = 1

# MDAS_AUTH - defines whether the plain text MDAS authorization scheme will be 
# supported. If used, the user/passwd pair registered with the
# MDAS catalog will be used to authenticate a user. Comment it out if the 
# SRB server does not support MDAS authorization.
# NOTE : A server can be built to support both MDAS_AUTH and SEA_AUTH.
MDAS_AUTH = 1

# SEA_AUTH - defines whether the SEA for authentication scheme is supported.
# Comment it out if the SRB server does not support SEA authentication.
# NOTE : A server can be built to support both MDAS_AUTH and SEA_AUTH.

SEA_AUTH = 1

# The following is needed only if SEA_AUTH is defined. LIB_SEA
# specifies where the SEA client library is located.

ifdef SEA_AUTH
LIB_SEA = /usr/local/apps/sea/lib/libsea.a
endif

# DEMO - defines whether the distributed SRB demo should be output.
# Comment it out if SRB demo is not needed.
DEMO = 1

# JAVA_GUI - defines whether the the Java GUI should be built.
# Comment it out if Java GUI is not needed.
JAVA_GUI = 1

ifdef JAVA_GUI
javaDir=/usr/local/apps/java
endif
