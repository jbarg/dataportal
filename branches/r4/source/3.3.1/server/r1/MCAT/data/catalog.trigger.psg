--- create function for trigger delDataGrpTrig
--- Make sure did this first
---  Your-pgsql/bin/createlang plpgsql MCAT

drop function ins_data_grp() cascade;

create function ins_data_grp() returns trigger as '
begin
   insert into mdas_td_del_data_grp values (
OLD.data_grp_id,
OLD.data_grp_name,
OLD.parent_grp_name,
OLD.coll_owner,
OLD.coll_cr_timestamp,
OLD.coll_comments,
OLD.coll_lock,
OLD.coll_lockowner,
OLD.coll_lockexpiry,
OLD.coll_link,
OLD.coll_mod_timestamp);
return OLD;
end;
' language plpgsql;

create trigger delDataGrpTrig 
       BEFORE DELETE on mdas_td_data_grp
for each row execute procedure ins_data_grp();

--- create function for trigger delReplTrig

drop function ins_data_repl() cascade;

create function ins_data_repl() returns trigger as '
begin
   insert into mdas_ad_del_repl values (
         OLD.data_id,
         OLD.repl_enum,
         OLD.data_name,
         OLD.data_typ_id,
         OLD.path_name,
         OLD.rsrc_id,
         OLD.repl_timestamp,
         OLD.data_grp_id,
         OLD.data_size,
         OLD.is_deleted,
         OLD.data_owner,
         OLD.is_dirty,
         OLD.offset,
         OLD.container_id,
         OLD.modify_timestamp,
         OLD.last_accs_time,
         OLD.datalock,
         OLD.lockowner,
         OLD.version_num,
         OLD.container_td_id,
         OLD.d_comment,
         OLD.dlockexpiry,
         OLD.dchecksum,
         OLD.dhide,
         OLD.auditflag,
         OLD.seg_num);
return OLD;
end;
' language plpgsql;

create trigger delReplTrig 
       BEFORE DELETE on mdas_ad_repl
for each row execute procedure ins_data_repl();

 
