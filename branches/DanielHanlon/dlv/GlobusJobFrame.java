/*
 * GlobusJobFrame.java
 *
 * Created on 26 June 2001, 11:29
 */

package dlv;

import org.globus.gram.*;
import org.globus.util.deactivator.*;
import org.globus.security.*;
import org.globus.io.gass.server.*;

import java.security.*;
import java.security.cert.*;
import java.io.*;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;

/**
 *
 * @author  daniel
 */
public class GlobusJobFrame extends javax.swing.JFrame {
    GlobusJobFrame myThis;
    OutputFrame std;
    GlobusJob gj;

    /** Creates new form GlobusJob */
    public GlobusJobFrame() {
        myThis = this;
        std = new OutputFrame();
        std.out.println( "Testing standard output..." );
        std.err.println( "Testing standard error..." );
        gj = new GlobusJob( std );
        //System.out = std.out;
        //System.err = std.err;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        doItJB = new javax.swing.JButton();
        gridProxyInitJB = new javax.swing.JButton();
        contactStringJL = new javax.swing.JLabel();
        contactStringJTF = new javax.swing.JTextField();
        runViaShellJCB = new javax.swing.JCheckBox();
        executableJL = new javax.swing.JLabel();
        executableJTF = new javax.swing.JTextField();
        myProxyInitJB = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        doItJB.setText("Run");
        doItJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doItJBActionPerformed(evt);
            }
        });

        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 0;
        gridBagConstraints1.gridwidth = 2;
        gridBagConstraints1.insets = new java.awt.Insets(10, 10, 30, 10);
        gridBagConstraints1.weightx = 2.0;
        gridBagConstraints1.weighty = 2.0;
        getContentPane().add(doItJB, gridBagConstraints1);

        gridProxyInitJB.setText("grid proxy init");
        gridProxyInitJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridProxyInitJBActionPerformed(evt);
            }
        });

        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 2;
        gridBagConstraints1.gridy = 0;
        gridBagConstraints1.gridwidth = 2;
        gridBagConstraints1.insets = new java.awt.Insets(10, 10, 30, 10);
        gridBagConstraints1.weightx = 2.0;
        gridBagConstraints1.weighty = 2.0;
        getContentPane().add(gridProxyInitJB, gridBagConstraints1);

        contactStringJL.setText("Contact string");
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.insets = new java.awt.Insets(10, 10, 10, 10);
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(contactStringJL, gridBagConstraints1);

        contactStringJTF.setText("tcs10.dl.ac.uk");
        contactStringJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactStringJTFActionPerformed(evt);
            }
        });

        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 1;
        gridBagConstraints1.gridy = 1;
        gridBagConstraints1.gridwidth = 4;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets(10, 10, 10, 10);
        gridBagConstraints1.weightx = 3.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(contactStringJTF, gridBagConstraints1);

        runViaShellJCB.setSelected(gj.isRunViaShell());
        runViaShellJCB.setText("Run via shell?");
        runViaShellJCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        runViaShellJCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runViaShellJCBActionPerformed(evt);
            }
        });

        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 1;
        gridBagConstraints1.gridy = 3;
        gridBagConstraints1.gridwidth = 4;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets(0, 10, 10, 10);
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints1.weightx = 3.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(runViaShellJCB, gridBagConstraints1);

        executableJL.setText("Executable");
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 2;
        gridBagConstraints1.insets = new java.awt.Insets(10, 10, 10, 10);
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(executableJL, gridBagConstraints1);

        executableJTF.setText("ls");
        executableJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executableJTFActionPerformed(evt);
            }
        });

        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 1;
        gridBagConstraints1.gridy = 2;
        gridBagConstraints1.gridwidth = 4;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets(10, 10, 10, 10);
        gridBagConstraints1.weightx = 3.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(executableJTF, gridBagConstraints1);

        myProxyInitJB.setText("MyProxy init");
        myProxyInitJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myProxyInitJBActionPerformed(evt);
            }
        });

        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.insets = new java.awt.Insets(10, 10, 30, 10);
        getContentPane().add(myProxyInitJB, gridBagConstraints1);

        pack();
    }//GEN-END:initComponents

    private void executableJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executableJTFActionPerformed
        // Add your handling code here:
        gj.setExecutable( executableJTF.getText() );
        gj.run();
    }//GEN-LAST:event_executableJTFActionPerformed

    private void contactStringJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactStringJTFActionPerformed
        // Add your handling code here:
        gj.setContact( contactStringJTF.getText() );
    }//GEN-LAST:event_contactStringJTFActionPerformed

    private void myProxyInitJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myProxyInitJBActionPerformed
        // Add your handling code here:
        SwingUtilities.invokeLater( new Runnable(){
            public void run(){
                org.globus.tools.ui.proxy.MyproxyInit mpiFrame = new org.globus.tools.ui.proxy.MyproxyInit();
                org.globus.tools.ui.util.UITools.center(null, mpiFrame);
                mpiFrame.setRunAsApplication(false);
                mpiFrame.setVisible(true);
            }
        });
    }//GEN-LAST:event_myProxyInitJBActionPerformed

    private void doItJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doItJBActionPerformed
        // Add your handling code here:
        gj.setContact( contactStringJTF.getText() );
        gj.setExecutable( executableJTF.getText() );
        gj.run();
    }//GEN-LAST:event_doItJBActionPerformed

    private void gridProxyInitJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridProxyInitJBActionPerformed
        // Add your handling code here:
        SwingUtilities.invokeLater( new Runnable(){
            public void run(){
                org.globus.tools.ui.proxy.GridProxyInit gpiFrame = new org.globus.tools.ui.proxy.GridProxyInit();
                org.globus.tools.ui.util.UITools.center(null, gpiFrame);
                gpiFrame.setRunAsApplication(false);
                gpiFrame.setVisible(true);
            }
        });
    }//GEN-LAST:event_gridProxyInitJBActionPerformed

    private void runViaShellJCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runViaShellJCBActionPerformed
        // Add your handling code here:
        gj.setRunViaShell( runViaShellJCB.isSelected() );
    }//GEN-LAST:event_runViaShellJCBActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new GlobusJobFrame().show();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doItJB;
    private javax.swing.JButton gridProxyInitJB;
    private javax.swing.JLabel contactStringJL;
    private javax.swing.JTextField contactStringJTF;
    private javax.swing.JCheckBox runViaShellJCB;
    private javax.swing.JLabel executableJL;
    private javax.swing.JTextField executableJTF;
    private javax.swing.JButton myProxyInitJB;
    // End of variables declaration//GEN-END:variables

    void error( String message, Exception e ){
	JDialog jd = new JDialog();
	jd.setTitle( "Error!" );
	JLabel errorLabel = new JLabel( message, 
					UIManager.getLookAndFeelDefaults().getIcon( "OptionPane.errorIcon" ),
					JLabel.CENTER );
	errorLabel.setBorder( new EmptyBorder( 5, 5, 5, 5 ) );
	jd.getContentPane().add( errorLabel, BorderLayout.NORTH );
	JTextArea ta = new JTextArea( 20, 40 );
	PipedInputStream pis = new PipedInputStream();
	BufferedReader br = new BufferedReader( new InputStreamReader( pis ) ); 
	try{
	    e.printStackTrace( new PrintStream( new PipedOutputStream( pis ) ) );
	    char[] buffer = new char[81];
	    buffer[80] = '\n';
	    String line;
	    while ( br.ready() ){
		br.read( buffer, 0, 80 );
		ta.append( new String( buffer ) );
	    }
	}
	catch( IOException ioe ){
	    System.err.println( "IOException" );
	}
	JButton ok = new JButton( "OK" );

	ok.addActionListener( new ActionListener(){
		public void actionPerformed( ActionEvent ae ){
		    synchronized( myThis ){
			myThis.notify();
		    }
		}
	    });
	
	jd.getContentPane().add( new JScrollPane( ta ), BorderLayout.CENTER );
	jd.getContentPane().add( ok, BorderLayout.SOUTH );
	jd.pack();
	jd.show();
	try{
	    synchronized( this ){
		this.wait();
	    }
	} catch( InterruptedException ie ){}
	jd.setVisible( false );
    }
    
}