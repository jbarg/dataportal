/*
 * OutputFrame.java
 *
 * Created on 25 June 2001, 14:39
 */

package dlv;
import java.io.*;
import javax.swing.*;
import java.awt.*;
/**
 *
 * @author  daniel
 */
public class OutputFrame extends javax.swing.JFrame {

    public final PrintStream out;
    public final PrintStream err;
    
    /** Creates new form OutputFrame */
    public OutputFrame() {
        initComponents();   
        out = new PrintStream( new myPS( OutputPanelTextArea, OutputPanelScrollPane ) );
        err = new PrintStream( new myPS( ErrorPanelTextArea, ErrorPanelScrollPane ) );
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ErrorOrOutput = new javax.swing.JTabbedPane();
        OutputPanel = new javax.swing.JPanel();
        OutputPanelClear = new javax.swing.JButton();
        OutputPanelScrollPane = new javax.swing.JScrollPane();
        OutputPanelTextArea = new javax.swing.JTextArea();
        ErrorPanel = new javax.swing.JPanel();
        ErrorPanelClear = new javax.swing.JButton();
        ErrorPanelScrollPane = new javax.swing.JScrollPane();
        ErrorPanelTextArea = new javax.swing.JTextArea();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        OutputPanel.setLayout(new java.awt.BorderLayout());

        OutputPanel.setToolTipText("View standard output");
        OutputPanelClear.setText("Clear");
        OutputPanelClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutputPanelClearActionPerformed(evt);
            }
        });

        OutputPanel.add(OutputPanelClear, java.awt.BorderLayout.SOUTH);

        OutputPanelTextArea.setEditable(false);
        OutputPanelTextArea.setColumns(30);
        OutputPanelTextArea.setRows(30);
        OutputPanelScrollPane.setViewportView(OutputPanelTextArea);

        OutputPanel.add(OutputPanelScrollPane, java.awt.BorderLayout.CENTER);

        ErrorOrOutput.addTab("Output", OutputPanel);

        ErrorPanel.setLayout(new java.awt.BorderLayout());

        ErrorPanel.setToolTipText("View Standard Error");
        ErrorPanelClear.setText("Clear");
        ErrorPanelClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ErrorPanelClearActionPerformed(evt);
            }
        });

        ErrorPanel.add(ErrorPanelClear, java.awt.BorderLayout.SOUTH);

        ErrorPanelTextArea.setEditable(false);
        ErrorPanelTextArea.setColumns(30);
        ErrorPanelTextArea.setRows(30);
        ErrorPanelScrollPane.setViewportView(ErrorPanelTextArea);

        ErrorPanel.add(ErrorPanelScrollPane, java.awt.BorderLayout.CENTER);

        ErrorOrOutput.addTab("Error", ErrorPanel);

        getContentPane().add(ErrorOrOutput, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void ErrorPanelClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ErrorPanelClearActionPerformed
        ErrorPanelTextArea.setText("");
    }//GEN-LAST:event_ErrorPanelClearActionPerformed

    private void OutputPanelClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutputPanelClearActionPerformed
        OutputPanelTextArea.setText("");
    }//GEN-LAST:event_OutputPanelClearActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new OutputFrame().show();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane ErrorOrOutput;
    private javax.swing.JPanel OutputPanel;
    private javax.swing.JButton OutputPanelClear;
    private javax.swing.JScrollPane OutputPanelScrollPane;
    private javax.swing.JTextArea OutputPanelTextArea;
    private javax.swing.JPanel ErrorPanel;
    private javax.swing.JButton ErrorPanelClear;
    private javax.swing.JScrollPane ErrorPanelScrollPane;
    private javax.swing.JTextArea ErrorPanelTextArea;
    // End of variables declaration//GEN-END:variables

}

class myPS extends OutputStream{
    String ls = (String)System.getProperty( "line.separator" );
    char el;
    JTextArea jta;
    JScrollPane jsp;
    public myPS( JTextArea jta, JScrollPane jsp ){
        this.jta = jta;
        this.jsp = jsp;
        //Character at the End of a Line
        el = ls.charAt( ls.length()-1 );
    }
    
    String s;
    private void append( String s ){
        this.s = s;
        if ( SwingUtilities.isEventDispatchThread() ){
            Runnable r = new Runnable(){
                public void run(){
                    jta.append(myPS.this.s);
                    //Does this contain an end of line character?
                    if ( myPS.this.s.indexOf( el ) != -1 )
                        jsp.getViewport().setViewPosition(new Point(0,jta.getHeight()-jsp.getHeight() ));
                }
            };
            SwingUtilities.invokeLater(r);
        } else {
            jta.append(s);
            //Does this contain an end of line character?
            if ( s.indexOf( el ) != -1 )
                jsp.getViewport().setViewPosition(new Point(0,jta.getHeight()-jsp.getHeight() ));
        }
    }
    
    public void close(){}
    public void flush(){}
    public void write( byte b[] ){
        append( new String( b ) );
    }
    public void write( byte b[], int off, int len ){
        append( new String( b, off, len ) );
    }
    public void write( int b ){
        append( new String( new byte[]{ (byte)b } ) );
    }
}
