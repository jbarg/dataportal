The document describes the syntax of functions implemented in SRB Python binding.

-------------------------------
connect
-------------------------------
int connect(char *host_name, char *port_num, char *domain_home, char *auth_method, 
                  char *user_name, char *password, char *dn_string)

   return value: an integer which is a unique ID for a connection.

   auth_method: three possible values are "GSI_AUTH", "ENCRYPT1", "PASSWD_AUTH".
   password: The password if the ENCRYPT1/PASS_WORD authentication method is used.
   dn_string: The DN string of the SRB server in the host. It is used only for GSI_AUTH 
              method. In this case, the 'password' field is ignored.

-------------------------------
disconnect
-------------------------------
void disconnect(int conn_id)

   conn_id: The connection ID returned from calling 'connect'.

-------------------------------
obj_open
-------------------------------
int obj_open(int conn_id, char *coll_name, char *obj_name, int oflag)
 
   return value: an integer serves as file descriptor in SRB system.

   conn_id: connection ID 
   coll_name: The collection name in which the file resides.
   obj_name: The name of the file to be open.
   oflag:     0  --> 

-------------------------------
obj_read
-------------------------------
char *obj_read(int conn_id, int fd, int buf_size)

   return value: a string
   
   fd: The file descriptor returned from obj_open.
   buf_size: specifies the largest number of characters to be retrieved from a opened file.

-------------------------------
obj_close
-------------------------------
int obj_close(int conn_id, int fd)

   return value: returns 0 if the operation succeeded. An negative number is returned if it failed.

-------------------------------
obj_create
-------------------------------
int obj_create(int conn_id, int cat_type, char *obj_name, char *data_type,
               char *resc_name, char *coll_name, char *path_name, int data_size)

   return value: an positive integer is returned as a file descriptor. The function returns a negative
                 number if it failed.

   cat_type: usually it is 0.
   obj_name: The new file name to be created with SRB.
   data_type: example can be 'gif', 'text', etc. A generic type will be picked by SRB if this
              field is null.
   resc_name: The name of the SRB resource in which the new file will reside.
   path_name: This parameter allows user to put the new file outside SRB vault area. Usually this field
              is null and the new file goes into SRB vault.
   data_size: specify the file size in bytes.


-------------------------------
obj_write
-------------------------------
int obj_write(int conn_id, int fd, char *buf, int buf_size)

   return value: The number of bytes have been written into a SRB file. A negative number is returned
                 if the function failed.

   buf: the stream of data to be written into a SRB file.
   buf_size: specify the number of bytes to be written.

-------------------------------
obj_seek
-------------------------------
int obj_seek(int conn_id, int fd, int offset, int whence)

   return value: return 0 if succeeded. A negative number is returned if it failed.

-------------------------------
obj_delete
-------------------------------
int obj_delete(int conn_id, char *obj_name, int copy_num, char *coll_name)

   return value: returns 0 if succeeded. A negative number is returned if it failed.

   obj_name: the name of the file to be deleted.
   copy_num: specifies which replica to be removed. 
   coll_name: The collection in which the file resides.

-------------------------------
mk_collection
-------------------------------
int mk_collection(int conn_id, int cat_type, char *par_coll, char *new_coll)

   return value: returns 0 if succeeded. A negative number is returned if it failed.

   cat_type: usually 0.
   par_coll: parent collection for a new collection.
   new_coll: the name of a new collection to be created.

-------------------------------
rm_collection
-------------------------------
int rm_collection(int conn_id, int cat_type,int recursive, char *coll_name)

   return value: returns 0 if succeeded. A negative number is returned if it failed.

   recursive: indicates if to remove the collection recursively.
   coll_name: the name of the collection to be removed.

---------------------------------------------------------------------------------------
get_objs_in_coll: The function is used to query all files within a given collection.
---------------------------------------------------------------------------------------
int get_objs_in_coll(int conn_id, int cat_type, int flag_val, char *coll_name)

   return value: returns a positive number for the number of files to be retrieved by 
                 get_obj_metadata() if succeeded. A negative number is returned if it failed.

-------------------------------------------------------------------------------------------
get_obj_metadata: used to retrieve system metadata of files after calling  get_objs_in_coll().
-------------------------------------------------------------------------------------------
char *get_obj_metadata(int conn_id, int meta_idx, int row_id)

   return value: a string

   meta_idx: The metadat ID which is one of the followings.
               0  -> Dataset name
               1  -> Datset's Parent Collection Name
               2  -> Dataset Size
               3  -> Data Type
               4  -> Owner
               5  -> Time Stamp
               6  -> Replica Index. 0 means the original copy. 1 means second copy...
               7  -> Resource Name

   row_id: indicates which file.
   

-------------------------------
more_objs_in_coll
-------------------------------
int more_objs_in_coll(int conn_id)

   return value: the number of newly retrieved rows. A negative number indicates an error occurred.

---------------------------------------------------------------------
get_subcolls: used to query all sub collection in a given collection.
---------------------------------------------------------------------
int get_subcolls(int conn_id, int cat_type, char *coll_name)

   return value: the number of newly retrieved rows. A negative number indicates an error occurred.

   coll_name: the whole collection name with path.

-------------------------------
get_subcoll_name
-------------------------------
char *get_subcoll_name(int conn_id, int row_id)

   return value: A string

-------------------------------
more_subcolls
-------------------------------
int more_subcolls(int conn_id)

   return value: the number of newly retrieved rows. A negative number indicates an error occurred.
