//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.06.06 at 12:17:03 BST 
//


package edu.sdsc.matrix.srb.parser.impl;

public class KeyImpl implements edu.sdsc.matrix.srb.parser.Key, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected java.lang.String _IssuedBy;
    protected java.lang.String _KeyVersion;
    protected java.lang.String _KeyType;
    protected java.util.Calendar _ValidTo;
    protected java.lang.String _KeyValue;
    protected java.util.Calendar _ValidFrom;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\f\u0007\u00dbNppsq\u0000~\u0000\u0000\t\u00f0\u00f2\u0097ppsq\u0000~\u0000\u0000\u0006\u0092\u0000vppsq\u0000~\u0000\u0000\u0004\u00dbr\u00d3ppsq\u0000~\u0000\u0000\u0003I\u00003ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00b6\u008d\u0093pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00b6\u008d\u0088sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\bkeyValuet\u0000(http://www.teragrid.org/schemas/datagridsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u0092r\u009bppsq\u0000~\u0000\n\u0001\u0092r\u0090q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u000e\u0001\u0092r\u0085ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\bdateTimesr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u00000q\u0000~\u0000\u001bsq\u0000~\u0000$t\u0000\tvalidFromq\u0000~\u0000(sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0012\u0001psq\u0000~\u0000)\u0001\u0092r\u009bppsq\u0000~\u0000\n\u0001\u0092r\u0090q\u0000~\u0000\u0013p\u0000q\u0000~\u0000,sq\u0000~\u0000$t\u0000\u0007validToq\u0000~\u0000(q\u0000~\u00007sq\u0000~\u0000)\u0001\u00b6\u008d\u009eppsq\u0000~\u0000\n\u0001\u00b6\u008d\u0093q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0011sq\u0000~\u0000$t\u0000\bissuedByq\u0000~\u0000(q\u0000~\u00007sq\u0000~\u0000)\u0003^\u00f2\u001cppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0003^\u00f2\u0011q\u0000~\u0000\u0013pq\u0000~\u0000\u0011sq\u0000~\u0000$t\u0000\nkeyVersiont\u0000\u0000q\u0000~\u00007sq\u0000~\u0000)\u0002\u0016\u00e8\u00b2ppsq\u0000~\u0000B\u0002\u0016\u00e8\u00a7q\u0000~\u0000\u0013pq\u0000~\u0000\u0011sq\u0000~\u0000$t\u0000\u0007keyTypeq\u0000~\u0000Fq\u0000~\u00007sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000L[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\n\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppq\u0000~\u0000*q\u0000~\u00009ppppppppppppppppppppppppppq\u0000~\u0000\u0007ppppq\u0000~\u0000Gpppppppppppppppppppppq\u0000~\u0000Apppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppq\u0000~\u0000\tppq\u0000~\u0000=ppppq\u0000~\u0000\bpppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppppppppppppp");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return edu.sdsc.matrix.srb.parser.Key.class;
    }

    public java.lang.String getIssuedBy() {
        return _IssuedBy;
    }

    public void setIssuedBy(java.lang.String value) {
        _IssuedBy = value;
    }

    public java.lang.String getKeyVersion() {
        return _KeyVersion;
    }

    public void setKeyVersion(java.lang.String value) {
        _KeyVersion = value;
    }

    public java.lang.String getKeyType() {
        if (_KeyType == null) {
            return "GSI";
        } else {
            return _KeyType;
        }
    }

    public void setKeyType(java.lang.String value) {
        _KeyType = value;
    }

    public java.util.Calendar getValidTo() {
        return _ValidTo;
    }

    public void setValidTo(java.util.Calendar value) {
        _ValidTo = value;
    }

    public java.lang.String getKeyValue() {
        return _KeyValue;
    }

    public void setKeyValue(java.lang.String value) {
        _KeyValue = value;
    }

    public java.util.Calendar getValidFrom() {
        return _ValidFrom;
    }

    public void setValidFrom(java.util.Calendar value) {
        _ValidFrom = value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new edu.sdsc.matrix.srb.parser.impl.KeyImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://www.teragrid.org/schemas/datagrid", "keyValue");
        context.endAttributes();
        try {
            context.text(((java.lang.String) _KeyValue));
        } catch (java.lang.Exception e) {
            com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_ValidFrom!= null) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "validFrom");
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ValidFrom), null));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ValidTo!= null) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "validTo");
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ValidTo), null));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IssuedBy!= null) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "issuedBy");
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IssuedBy));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_KeyVersion!= null) {
            context.startAttribute("", "keyVersion");
            try {
                context.text(((java.lang.String) _KeyVersion));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_KeyType!= null) {
            context.startAttribute("", "keyType");
            try {
                context.text(((java.lang.String) _KeyType));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.sdsc.matrix.srb.parser.Key.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return edu.sdsc.matrix.srb.parser.impl.KeyImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("keyValue" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 3;
                        return ;
                    }
                    break;
                case  5 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("issuedBy" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 6;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("validFrom" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 10;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("validTo" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 8;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  9 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("validTo" == ___local)) {
                        context.popAttributes();
                        state = 5;
                        return ;
                    }
                    break;
                case  7 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("issuedBy" == ___local)) {
                        context.popAttributes();
                        state = 5;
                        return ;
                    }
                    break;
                case  4 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("keyValue" == ___local)) {
                        context.popAttributes();
                        state = 5;
                        return ;
                    }
                    break;
                case  5 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  11 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("validFrom" == ___local)) {
                        context.popAttributes();
                        state = 5;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    if (("" == ___uri)&&("keyType" == ___local)) {
                        state = 12;
                        return ;
                    }
                    if (("" == ___uri)&&("keyVersion" == ___local)) {
                        state = 1;
                        return ;
                    }
                    break;
                case  5 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  13 :
                    if (("" == ___uri)&&("keyType" == ___local)) {
                        goto0();
                        return ;
                    }
                    break;
                case  2 :
                    if (("" == ___uri)&&("keyVersion" == ___local)) {
                        goto0();
                        return ;
                    }
                    break;
                case  5 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  8 :
                        try {
                            _ValidTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 9;
                        return ;
                    case  3 :
                        try {
                            _KeyValue = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 4;
                        return ;
                    case  6 :
                        try {
                            _IssuedBy = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 7;
                        return ;
                    case  12 :
                        try {
                            _KeyType = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 13;
                        return ;
                    case  10 :
                        try {
                            _ValidFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 11;
                        return ;
                    case  5 :
                        revertToParentFromText(value);
                        return ;
                    case  1 :
                        try {
                            _KeyVersion = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 2;
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        private void goto0()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 0;
            idx = context.getAttribute("", "keyVersion");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "keyType");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

    }

}
