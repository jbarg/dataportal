#!/bin/sh
#
# testsuite
#
# Typical invocation:
#	testsuite |& tee test.log
#
#
# Note: Parameters that may require modifications are marked by AAAAA and BBBBB.
# AAAAA - Parameters related to user, authenication and connection info.
# BBBBB - Parameters related to storage resource info.
#
########################################
######## srbUserArg attributes #########
#VERBOSE=""
VERBOSE="-verbose"
########################################
######## clConnect attributes ##########
HOST="srb.sdsc.edu"		# AAAAA - The initial host to connect to. This
				# must be one of the server in mcatZone
PORT="6669"			# AAAAA - The port number given in srb.h  
USER="testuser"			# AAAAA
DOMAIN="sdsc"			# AAAAA
AUTH="TESTUSER"			# AAAAA - The passwd in the SRB env.
USERTYPE="normal"               # AAAAA - can be normal or srbadmin
#				#         srbadmin needed for table access test
mcatZone=sdsctbrick             # AAAAA - The mcatZone to test. This must be
				# mcatZone where the sources (RTYPS and
				# CONTAINER_RTYPS) are configured
########################################
srbUser=$USER
srbDomain=$DOMAIN
export srbUser srbDomain
export mcatZone
########################################
binDir=bin
dataDir=data
########################################
######### srbObject attributes #########
RTYPS="unix-sdsc unix-orion" # BBBBB - storage resources to be tested.
CONTAINER_RTYPS="unix-orion" # BBBBB - the container storage resource
CAT="MDAS"
PARENTCOLL="/$mcatZone/home/"$USER.$DOMAIN # AAAAA - Home collection of the testuser.
CONTAINER="fooContainer.$$"	     # AAAAA - Test container for testuser.
TESTODATA=../$dataDir/"inpFile.tiff"
TESTOTMP="tmpOFile.$$.f"
TESTODDTMP="tmpDataDir.$$.f"
TESTID="testObjID"
TESTID1="testObjID1"
TESTTYPE="image"
TESTCOLL="testColl.$$"
ORIGOBJ=origObj
NEWOBJ=newObj
########################################
####### srbTableObject attributes ######
## USER should be a srbadmin type to  ##
##  test the table access functions   ##
TABRTYPS="ora-dlib1-sdsc db2-mcat-hpss17" #table resources only
TESTTABODATA=../$dataDir/"m1.tab" #file with data to be inserted into table
TESTTABID="tabObjId"  #name of the srbObject"
TESTTABIDSELECT="tabObjId&SHADOW= <TEMPLATETYPE>HTMLREL</TEMPLATETYPE> select \* from BB order by 1" #full path to get data from TESTTABID
TESTTABIDINSERT="tabObjId&SHADOW= <TEMPLATETYPE>HTMLREL</TEMPLATETYPE> insert into BB" #full path to insert data from TESTTABID
TESTTABIDTRUNCATE="tabObjId&SHADOW= <TEMPLATETYPE>SQL</TEMPLATETYPE> delete from BB" #full path to truncate TESTTABID
ORIGTABOBJ="''"  #empty because it is for all of the database
TESTTABTYPE="database shadow object"
TESTTABOTMP="tabObjId.junk.o.$$.tmp"
####### srbDbLobject attributes ########
ORATYPE="oracle"	# BBBBB - Uncommented for Oracle Lobj.
ORALOCS="srb.sdsc.edu:mcat:foo" # BBBBB - The Oracle Lobj.
#
LOBJ_TYPES="$DB2TYPE $ILLTYPE $ORATYPE"
LOBJ_LOCS="$DB2LOCS $ILLLOCS $ORALOCS"
TESTLOBDATA=../$dataDir/"inpFile.tiff"
TESTLOBOBJ=lobjID
TESTLOBMODE="0755"
TESTLOBTMP="tmpLobjFile.$$.f"
########################################
########################################
########################################
########################################

cd $binDir

if [ "$1" = "" ]
then
    option='object'
else
    option=$1
fi

echo "test option = "$option

# Check the validity of the option input
case "$option" in
'all'|'audit'|'object'|'dbLobj')
    ;;
*)
    echo "Invalid option: $option" 
    echo "Usage: testsuite [all|audit|ftp|http|file|object|dbLobj]"
    exit
    ;;
esac

case "$option" in
'all')

######## clConnect ##########

srbhello -host $HOST -port $PORT -auth $AUTH $VERBOSE 
if [ $? != "0" ] ; then exit 17 ; fi

# take it out for now for gsi check.
# srbchkauth -host $HOST -port $PORT -auth $AUTH $VERBOSE -user $USER 	\
# -domain $DOMAIN
if [ $? != "0" ] ; then exit 17 ; fi

srbhostinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE
if [ $? != "0" ] ; then exit 17 ; fi

srbvaultinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE
if [ $? != "0" ] ; then exit 17 ; fi
;;
esac


case "$option" in
'all'|'audit')
######## audit trail on ##########

srbaudittrail -host $HOST -port $PORT -auth $AUTH $VERBOSE -on
if [ $? != "0" ] ; then exit 17 ; fi
;;
esac

########## srbObj ##########
case "$option" in
'all'|'audit'|'object')

# cleanup before starting
rm $TESTOTMP
rm $TESTTABOTMP

srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE -id $TESTID 	\
 -coll $PARENTCOLL/$TESTCOLL

srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE -id $TESTID1 	\
-coll $PARENTCOLL/$TESTCOLL

if [ $USERTYPE = "srbadmin" ] ; then
    srbtabodel -host $HOST -port $PORT -auth $AUTH $VERBOSE -id     \
 $TESTTABIDTRUNCATE -coll $PARENTCOLL/$TESTCOLL
fi

srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT 	\
 -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL

# test "collection"

srbmkcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT 	\
 -parent $PARENTCOLL -coll $TESTCOLL
if [ $? != "0" ] ; then exit 17 ; fi

srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT 	\
-coll $PARENTCOLL
if [ $? != "0" ] ; then 
    srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT   \
     -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
    exit 17 ;
fi

srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT -coll   \
$PARENTCOLL/$TESTCOLL
if [ $? != "0" ] ; then 
    srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT   \
     -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
    exit 17 ; 
fi

# test container

srbocontainer -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
 -rsrc $CONTAINER_RTYPS -cattype $CAT -from $TESTODATA -id $TESTID 	\
 -obj $ORIGOBJ -coll $PARENTCOLL/$TESTCOLL -type $TESTTYPE -cont $CONTAINER
if [ $? != "0" ] ; then 
    srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT   \
     -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
    exit 17 ; 
fi

## test table access 
## USER should be a srbadmin user to  ##
##  test the table access functions   ##

if [ $USERTYPE = "srbadmin" ] ; then
   for ORIGRSRC in $TABRTYPS ; do
    {
	    srboregister -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
    -rsrc $ORIGRSRC -cattype $CAT  -id $TESTTABID -obj $ORIGTABOBJ   \
    -coll $PARENTCOLL/$TESTCOLL -type $TESTTABTYPE
	    if [ $? != "0" ] ; then 
	    echo "Error: $USER needs to have SRB admin privileges"
	    exit 17 ; 
	    fi
	srboappend -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
    -from $TESTTABODATA -id $TESTTABIDINSERT  -coll $PARENTCOLL/$TESTCOLL
	if [ $? != "0" ] ; then exit 17 ; fi

	srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
    -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
	if [ $? != "0" ] ; then exit 17 ; fi

	srbodsinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
    -rsrc $ORIGRSRC -id $TESTTABID -coll $PARENTCOLL/$TESTCOLL
	if [ $? != "0" ] ; then exit 17 ; fi

        srbtaboget -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
    -rsrc $ORIGRSRC -id $TESTTABIDSELECT -coll $PARENTCOLL/$TESTCOLL \
    -to $TESTTABOTMP
	if [ $? != "0" ] ; then exit 17 ; fi

	ls -l $TESTTABODATA $TESTTABOTMP
	if [ $? != "0" ] ; then exit 17 ; fi

	echo "testsuite: Checking % diff $TESTTABODATA $TESTTABOTMP"
	diff $TESTTABODATA $TESTTABOTMP
	if [ $? != "0" ] ; then exit 17 ; fi
	echo "testsuite: diff o.k."
	echo ""

	rm $TESTTABOTMP
	if [ $? != "0" ] ; then exit 17 ; fi

	srbtabodel -host $HOST -port $PORT -auth $AUTH $VERBOSE \
       -id $TESTTABIDTRUNCATE -coll $PARENTCOLL/$TESTCOLL
	    if [ $? != "0" ] ; then exit 17 ; fi
	srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE \
       -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
	if [ $? != "0" ] ; then exit 17 ; fi
    }
    done;
fi	


# test query

echo "testsuite: testing srboddinfo and sending output to $TESTODDTMP"

srboddinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
-rsrc $CONTAINER_RTYPS -id $TESTID -coll $PARENTCOLL/$TESTCOLL > $TESTODDTMP
if [ $? != "0" ] ; then 
    srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT   \
     -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
    exit 17 ; 
fi

echo "testsuite: head of $TESTODDTMP:"
head $TESTODDTMP
if [ $? != "0" ] ; then 
    srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT   \
     -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
    rm $TESTODDTMP
    exit 17 ; 
fi
echo ""

rm $TESTODDTMP
if [ $? != "0" ] ; then exit 17 ; fi

# test "move"
for ORIGRSRC in $RTYPS ; do
{

    for NEWRSRC in $RTYPS ; do
    {
	if [ "$NEWRSRC" != "$ORIGRSRC" ] ; then
	    srbocreate -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
	     -rsrc $ORIGRSRC -cattype $CAT -from $TESTODATA -id $TESTID  \
	     -obj $ORIGOBJ -coll $PARENTCOLL/$TESTCOLL -type $TESTTYPE
	    if [ $? != "0" ] ; then
	        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
		 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
		exit 17 ;
	    fi

	    srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
		srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
		 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

		srbodsinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
		 -rsrc $ORIGRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

# do a srboticket instead of srboget.
# echo srboticket -host $HOST -port $PORT -auth $AUTH $VERBOSE     \
#              -rsrc $ORIGRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL    \
#              -to $TESTOTMP
# 
 	    srboticket -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
 	     -rsrc $ORIGRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL	\
 	     -to $TESTOTMP

            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    ls -l $TESTODATA $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
		rm $TESTOTMP
                exit 17 ;
            fi
	    echo "testsuite: Checking % diff $TESTODATA $TESTOTMP"
	    diff $TESTODATA $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi
	    echo "testsuite: diff o.k."
	    echo ""

	    rm $TESTOTMP

	    srboseek -host $HOST -port $PORT -auth $AUTH $VERBOSE	\
	     -rsrc $ORIGRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
	     -seek 42 -bytes 100 -to $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi

	    ls -l $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi

	    rm $TESTOTMP

	    srbomove -host $HOST -port $PORT -auth $AUTH $VERBOSE	\
	     -cattype $CAT -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
	     -obj $ORIGOBJ $NEWOBJ -rsrc $ORIGRSRC $NEWRSRC
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srbopcopy -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -rsrc $ORIGRSRC -cattype $CAT -id $TESTID -to $TESTID1 	\
	     -obj $ORIGOBJ -coll $PARENTCOLL/$TESTCOLL -type $TESTTYPE
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srbodsinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE	\
	     -rsrc $NEWRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srboget -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -rsrc $NEWRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
	     -to $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    ls -l $TESTODATA $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
		rm $TESTOTMP
                exit 17 ;
            fi


	    echo "testsuite: Checking % diff $TESTODATA $TESTOTMP"
	    diff $TESTODATA $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi
	    echo "testsuite: diff o.k."
	    echo ""

	    rm $TESTOTMP

	    srboseek -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -rsrc $NEWRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
	     -seek 42 -bytes 100 -to $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    ls -l $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
		rm $TESTOTMP
                exit 17 ;
            fi


	    rm $TESTOTMP

	    srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -id $TESTID -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE	\
	     -id $TESTID1 -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
	    if [ $? != "0" ] ; then exit 17 ; fi

	fi
    }
    done ;
}
done ;

# test "copy"
for ORIGRSRC in $RTYPS ; do
{
    srbocreate -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -rsrc $ORIGRSRC -cattype $CAT -from $TESTODATA -id $TESTID 	\
     -obj $ORIGOBJ -coll $PARENTCOLL/$TESTCOLL -type $TESTTYPE
    if [ $? != "0" ] ; then 
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
	exit 17 ; 
    fi

    srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
    if [ $? != "0" ] ; then 
	srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
	exit 17 ; 
    fi

    srbodsinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -rsrc $ORIGRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL
    if [ $? != "0" ] ; then
        srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
         -id $TESTID -coll $PARENTCOLL/$TESTCOLL
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
        exit 17 ;
    fi
    echo ""

    srboget -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -rsrc $ORIGRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL -to $TESTOTMP
    if [ $? != "0" ] ; then
        srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
         -id $TESTID -coll $PARENTCOLL/$TESTCOLL
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
	rm $TESTOTMP
        exit 17 ;
    fi
    echo ""

    ls -l $TESTODATA $TESTOTMP
    if [ $? != "0" ] ; then
        srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
         -id $TESTID -coll $PARENTCOLL/$TESTCOLL
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
        rm $TESTOTMP
        exit 17 ;
    fi
    echo "testsuite: Checking % diff $TESTODATA $TESTOTMP"
    diff $TESTODATA $TESTOTMP
    if [ $? != "0" ] ; then
        srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
         -id $TESTID -coll $PARENTCOLL/$TESTCOLL
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
        rm $TESTOTMP
        exit 17 ;
    fi
    echo "testsuite: diff o.k."
    echo ""

    rm $TESTOTMP

    srboseek -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -rsrc $ORIGRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
     -seek 42 -bytes 100 -to $TESTOTMP
    if [ $? != "0" ] ; then
        srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
         -id $TESTID -coll $PARENTCOLL/$TESTCOLL
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
	rm $TESTOTMP
        exit 17 ;
    fi

    ls -l $TESTOTMP
    if [ $? != "0" ] ; then
        srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
         -id $TESTID -coll $PARENTCOLL/$TESTCOLL
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
	rm $TESTOTMP
        exit 17 ;
    fi


    rm $TESTOTMP

    for NEWRSRC in $RTYPS ; do
    {
	if [ "$NEWRSRC" != "$ORIGRSRC" ] ; then
	    srbocopy -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -cattype $CAT -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
	     -obj $ORIGOBJ $NEWOBJ -rsrc $ORIGRSRC $NEWRSRC
    	    if [ $? != "0" ] ; then
            	srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
            	 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
            	srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
            	exit 17 ;
    	    fi


	    srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srbodsinfo -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -rsrc $NEWRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                exit 17 ;
            fi

	    srboget -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -rsrc $NEWRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
	     -to $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
	 	rm $TESTOTMP
                exit 17 ;
            fi


	    ls -l $TESTODATA $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi

	    echo "testsuite: Checking % diff $TESTODATA $TESTOTMP"
	    diff $TESTODATA $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi

	    echo "testsuite: diff o.k."
	    echo ""

	    rm $TESTOTMP
	    if [ $? != "0" ] ; then exit 17 ; fi

	    srboseek -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	     -rsrc $NEWRSRC -id $TESTID -coll $PARENTCOLL/$TESTCOLL 	\
	     -seek 42 -bytes 100 -to $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi

	    ls -l $TESTOTMP
            if [ $? != "0" ] ; then
                srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE    \
                 -id $TESTID -coll $PARENTCOLL/$TESTCOLL
                srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
                 -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
                rm $TESTOTMP
                exit 17 ;
            fi

	    rm $TESTOTMP

	fi
    }
    done ;

    for NEWRSRC in $RTYPS ; do
    {
	srbodel -host $HOST -port $PORT -auth $AUTH $VERBOSE -id $TESTID   \
	 -coll $PARENTCOLL/$TESTCOLL

    }
    done ;

    srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -cattype $CAT -coll $PARENTCOLL/$TESTCOLL
    if [ $? != "0" ] ; then
        srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -cattype $CAT -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
        exit 17 ;
    fi
}
done ;

srbmodcoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT   \
 -coll $PARENTCOLL/$TESTCOLL -op D_DELETE_COLL
if [ $? != "0" ] ; then exit 17 ; fi

srblscoll -host $HOST -port $PORT -auth $AUTH $VERBOSE -cattype $CAT   \
 -coll $PARENTCOLL
if [ $? != "0" ] ; then exit 17 ; fi

;;
esac


########## db large object ##########

case "$option" in
'all'|'dbLobj')

for DBMSTYPE in $LOBJ_TYPES
do
case "$DBMSTYPE" in
$DB2TYPE) LOC=$DB2LOCS;;
$ILLTYPE) LOC=$ILLLOCS;;
$ORATYPE) LOC=$ORALOCS;;
esac

{
#   cleanup before starting
    rm $TESTLOBTMP

    srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -dbms $DBMSTYPE -rsrc $LOC -id $TESTLOBOBJ

#   end of cleanup

    srbdbcreate -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -dbms $DBMSTYPE -rsrc $LOC -from $TESTLOBDATA -id $TESTLOBOBJ 	\
     -mode $TESTLOBMODE 
    if [ $? != "0" ] ; then 
	srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
	 -dbms $DBMSTYPE -r src $LOC -id $TESTLOBOBJ
	exit 17 ;
    fi

    srbdbget -host $HOST -port $PORT -auth $AUTH $VERBOSE -dbms $DBMSTYPE   \
     -rsrc $LOC -id $TESTLOBOBJ -mode $TESTLOBMODE -to $TESTLOBTMP
    if [ $? != "0" ] ; then 
        srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -dbms $DBMSTYPE -r src $LOC -id $TESTLOBOBJ
	rm $TESTLOBTMP
        exit 17 ; 
    fi
    ls -l $TESTODATA $TESTLOBTMP
    if [ $? != "0" ] ; then 
        srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -dbms $DBMSTYPE -r src $LOC -id $TESTLOBOBJ
        rm $TESTLOBTMP
        exit 17 ; 
    fi

    echo "testsuite: Checking % diff $TESTODATA $TESTLOBTMP"
    diff $TESTODATA $TESTLOBTMP
    if [ $? != "0" ] ; then 
        srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -dbms $DBMSTYPE -r src $LOC -id $TESTLOBOBJ
        rm $TESTLOBTMP
        exit 17 ; 
    fi
    echo "testsuite: diff o.k."
    echo ""

    rm $TESTLOBTMP

    srbdbseek -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -dbms $DBMSTYPE -rsrc $LOC -id $TESTLOBOBJ -mode $TESTLOBMODE 	\
     -to $TESTLOBTMP -seek 42 -bytes 100
    if [ $? != "0" ] ; then
        srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -dbms $DBMSTYPE -r src $LOC -id $TESTLOBOBJ
        rm $TESTLOBTMP
        exit 17 ;
    fi

    ls -l $TESTODATA $TESTLOBTMP
    if [ $? != "0" ] ; then
        srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE   \
         -dbms $DBMSTYPE -r src $LOC -id $TESTLOBOBJ
        rm $TESTLOBTMP
        exit 17 ;
    fi

    rm $TESTLOBTMP

    srbdbdel -host $HOST -port $PORT -auth $AUTH $VERBOSE 	\
     -dbms $DBMSTYPE -rsrc $LOC -id $TESTLOBOBJ
    if [ $? != "0" ] ; then exit 17 ; fi

}
done ;


;;
esac


######## audit trail off ##########

srbaudittrail -host $HOST -port $PORT -auth $AUTH $VERBOSE -off
if [ $? != "0" ] ; then exit 17 ; fi


echo "Testsuite Completed Successfully"
