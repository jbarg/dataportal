<HTML>
<HEAD>
<TITLE>SRB</TITLE>
<BODY bgcolor=#99EEFF>
<IMG SRC="http://www.npaci.edu/images/DI.gif" WIDTH="555" HEIGHT="90"></P>

<h3>
SRB 3.2
</h3>

This document describes changes for SRB 3.2, released July 2,
2004.
<p>

If you are upgrading from a 3.1.0 release, you must first run
.../MCAT/data/310to320patch.xyz, where xyz matches your DBMS system
(syb, ora, psg, inf, mys, or db2).
If you are upgrading from a previous release, see the instructions in
MCAT/README.MCAT.PATCH.  
<p>

<h4>
New Shell to execute Scommands more quickly: Ssh
</h4>
     The Ssh command executes commands (both normal UNIX commands
     and S-commands) read from a terminal or a file.
<p>
     The primary goal for the design of  Ssh  is  to  reduce  the
     client/server  connection  overhead of S-command (the family
     of SRB  command  such  as  Sinit,  Sls,  Sput,  Sget,  etc).
     Currently,  after  initializing with the Sinit command, each
     S-command can be run as an independent UNIX command.  Within
     each  S-command,  a  new  connection  to  the  SRB server is
     created at the start of the command and  the  connection  is
     disconnected  at  the  end  of  each command. The standalone
     Scommand model is simple and  easy  to  use.   However,  the
     overhead of creating a SRB client/server connection is rela-
     tively high, especially on the server side. The high connec-
     tion overhead causes lag time in command response especially
     when the network latency between client and server is  high,
     and consumes resources of the servers. See the man page for
     more details.

<h4>
Client Initiated Connections parallel I/O mode
</h4>

A new "client-initiated connections" mode for parallel I/O has been
implemented in Sget, Sput, and Srsync to avoid problems with firewalls
in some environments.  Our original parallel I/O mode was (and is)
server-initated where the SRB Servers connect back to the Client for
each of the parallel data streams.  If a firewall prevents incoming
connections to the Client, the transfer would fail.  In
client-initiated mode, it is the Client that connects to the SRB
Server (multiple times) for the parallel I/O streams.  For additional
information, see the Sget, Sput, and Srsync descriptions in the
Scommands section below.

<h4>
MCAT for the Informix DBMS
</h4>
SRB 3.2 also contains a port of the MCAT to the Informix database
management system. This port was done by Mike Smorul from the
University of Maryland, College Park.

<h4>
Database Access Interface (DAI)
</h4>
The release also contains Database Access Interface (DAI) drivers for
a few more database systems. The new systems that have been added are
Informix, Sybase, Postgres and MySQL.  The DAI provides access to
tabular data stored in databases using the SRB.  Additional
information about DAI can be found in the readme.dir in the file
called README.DAI.

<h4>
Core SRB Server improvements
</h4>
<ol>
<li>
Free space used in selecting a resource.
</li>
If a logical resource contains multiple physical resources, intead of 
randomly choosing one of the resources to use, it will now use the first
randomly chosen resource that has enough free space for the request.
A couple of MCAT metadata items have been added for this capability.
The MCAT patch in MCAT/data/310to320patch.xyz must be run before
the 3.2 server can perform properly.  

<li>SRB maintenance mode</li>
The SRB servers can be put into maintenance mode
by creating a file named "srb.allow" in the "data" directory. If the
"srb.allow" file is empty, the SRB server will not accept any additional
connections from anyone. Existing connections are allowed to continue
to function. The "srb.allow" file can be edited as a text file to
add users to be allowed to make connections during maintenance mode.
The format is userName@domainName for each user.
<p>
Each individual SRB server can be put into maintenance mode
independently from the other SRB servers. If the MCAT server
is put into maintenance mode, the whole set of servers within the
zone is effectively put into maintenance mode.

<li>The checksum value of the source file of a Scp operation will now be 
replicated to the target file. 
</li>

<li>A couple of timeouts were placed in the srbServer code to better
handle idle processes.</li>

<li>The death of child processing is now handled in the main srbMaster
loop to eliminate a problem with defunct process and hangs due to a
deadlock condition.</li>

<li>A better check of container family membership was implemented
for Srmcont and
Ssyncont.</li>
The container name now must be followed by a 10 digit 
number to belong to a container family.
</ol>

<h4>
New options/capabilities added to existing Scommands:
</h4>
<ul>
<li>Scat
</li>
      added -c option where datasets to show are chosen based on
      condition rather than by data or collection names. 
      The condition option applies to the whole SRB system instead of
      relative to the current working collection.  Example:
      Scat -c "CTIME >'2004-05-27-14.25'" will show all objects
      that are created after 2004-05-27, 2:25PM. Usable conditions
      can be found in Sattrs.
<li>
  Schmod
</li>
      option for adding curatorship permission has been added.
      This command also gives users with curator permissions the ability
      to change/give access permissions to their curation data objects or
      collections to other users.
<li>
  Sget
</li>
     added -M option, which sets the transfer mode  to  the  "client
     initiated connection" parallel I/O mode, which was designed to get
     around clients' possible firewall issues.  This mode is very similar
     to  the  "server initiated" mode except for the initial
     handshakes.  In this mode, the  control  socket  is  on  the
     resource server and the client spawns multiple threads, each
     initiating a connection to the server  control  socket.  After
     the  connections  have  been  established, the data transfer
     mechanism is the same as the "server initiated" mode.
<p>
     In addition, with the -M option set, the [-N numthreads] can be
     used to suggest to the server on the number of threads to use
     for the parallel transfer. If this option is not used, the server
     will decide the number of threads based on an internal algorithm.
<p>
     added -c  option where datasets to download are chosen
     based on condition rather than by data or collection names.
     The condition option applies to the whole SRB system instead of
     relative to the current working collection.  Example:
     Sget -c "GUID='123'" will copy all objects  that have
     their Guid set to 123. Usable conditions can be found in Sattrs.
<li>
  Sls
</li>

     added -p option to show the resource and physical path of dataset.
<p>
     added -V option to verify the physical path assoicated with the data
     by doing a file stat on the physical path. Only works for UNIX
     type resource currently.
<p>
     added -c option where datasets to be listed are chosen
     based on condition rather than by data or collection names.
     The condition option applies to the whole SRB system instead of
     relative to the current working collection.  Example:
     Sls -c "GUID like  '123%'" will list all objects  that have
     their Guid starting with 123. Usable conditions can be found
     in Sattrs.
<li>SmodR</li>
     added -D option which can disable access to a resource (eg. for
     preventive maintenance).
     added -U option which enables access to a resource
<li>
  Spcommand
</li>
     added -d option that, given a SRB dataset name, will execute the
     command on the host where the data resides and also pass the
     dataset name as the first argument to the proxy  operation.
     An example usage is:
        Spcommand -d myimg.tiff "convert .jpg"
     which will execute the convert command remotely and use
     it to convert the given tiff file to jpeg and send it back
     in stdout.
<li>
  Sput
</li>
     added -M option which sets the transfer mode  to  the  "client
     initiated connection" parallel I/O mode, which was designed to get
     around clients' possible firewall issues. This mode is very  similar
     to  the  "server initiated" mode except for the initial
     handshakes. In this mode,  the  control  socket  is  on  the
     resource server and the client spawns multiple threads, each
     initiating connection to the server  control  socket.  After
     the  connections  have  been  established, the data transfer
     mechanism is the same as the "server initiated" mode.
<p>
     In addition, with the -M option set, the [-N numthreads] can be
     used to suggest to the server on the number of threads to use
     for the parallel transfer. If this option is not used, the server
     will decide the number of threads based on an internal algorithm.
<li>
  Srsync
</li>
     The utility has been extended to synchronize two SRB object copies.
     Previously this utility was only synchronizing a local copy to
     a SRB object. For example,
        Srsync -r s:/z1/home/sam.usa/foo1 s:/z2/home/liz.uk/foo2
     will synchronize the files in collection foo1 to those in foo2
<p>
     added -s option that synchronizes based on only the file size
     (instead of the the size and checksum value) . This mode provides
     faster operation but the result is less accurate.
<p>
     added -M option that uses  "client initiated" parallel I/O for
     synchronization (see Sput/Sget for  explanation).
<li>
  Sufmeta
</li>
     added -e  options that allows for (remote) extracting of metadata
     using a T-language template stored in the SRB. It extracts the
     metadata  either from the dataset itself or from another metadata
     file which is also stored in the SRB. The extracted metadata is bulk
     loaded into MCAT.
<p>
     added -e options that allow copying metadata from one SRB
     object/collection  to  another  SRB object/collection.

</ul>

<h4>Scommand bugs fixed</h4>
Bugs were fixed in the following Scommands:
  Sannotate,
  Sattrs,
  Scd,
  Schksum,
  Scp,
  SgetD,
  SgetR,
  Sinit,
  Sln,
  Smkdir,
  SmodColl,
  Smv,
  Spasswd,
  Srm,
  Srmtrash,
  Stcat,
  Sticket, and
  Stls.


<h4>
New features in installation and administration
</h4>
<ol>

<li>The Java Admin Tool will now prompt for host and login information
if the .MdasEnv and .MdasAuth files are not found (or upon user
request).</li>This comes in handy on Windows computers especially, where
these files may not be established.  Since the Admin tool is pure Java
(starting in 3.1, via Jargon) you do not need to rebuild it, just execute
the jar file as provided in the release ('java -jar mcatAdmin.jar').
It is known to run properly on Linux, Solaris, Mac OS X, Windows XP, and
Windows 98.

<li>install.pl script has a few small improvements/bug fixes and some
additional comments based on recent experience from the user
community.  You can download this off of our web page, and it is also
included in the release.</li>

<li>Two new administrator commands have been added:</li>
<ul>
<li>SdelValue</li>
    This command allows an SRB Administraor to delete  users, physical
    resources and locations.
<li>SmodifyUser</li>
    This command allows an SRB Administrator to modify user information.
    The current the operation type supported is to insert an Authentication
    mapping (that is, to map a GSI Distinguished Name to an SRB user).
</ul>

<li>Lots of improvements to RPM spec file, located in mk/RPM/SRB.spec. Use
    this for making all 3 SRB rpms, MCAT, Slave, and client.
    View readme.dir/README.RPM.INSTALL for information.</li>

</ol>

As always, many smaller bug fixes and enhancements have also been
made and some documentation updated.

</BODY>
</HTML>