<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Arun Jagatheesan (San Diego Supercomputer Center) -->
<!--Sample XML file generated by XMLSPY v2004 rel. 3 U (http://www.xmlspy.com)-->
<DataGridRequest xmlns="http://www.teragrid.org/schemas/datagrid" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.teragrid.org/schemas/datagrid
C:\Matrix\3.3\matrix\schema\DGL.xsd" requestType="synchronous">
	<!-- 
	
	This example shows how a forEachLoop can be used to iterate over two sets concurrently and execute some operation on each element identified by those sets.  In the example below, ther are two sets: {A1, B1, C1} and {A2, B2, C2}, the foreach loop iterates over (A1,A2) , (B1,B2), and (C1,C2)



-->
	<GridUser>
		<userID>Matrix-demo</userID>
		<organization>
			<organizationName>sdsc</organizationName>
		</organization>
		<challenge-Response>******</challenge-Response>
		<homeDirectory>/home/Matrix-demo.sdsc</homeDirectory>
		<defaultStorageResource>sdsc-unix</defaultStorageResource>
		<phoneNumber>0</phoneNumber>
		<e-mail>arun@sdsc.edu</e-mail>
	</GridUser>
	<VOInfo>
		<server>srb.sdsc.edu</server>
		<port>6824</port>
	</VOInfo>
	<!--

Begin flow definition

-->
	<Flow flowID="outsideForLoop">
		
		<!--
		
		the outside flow uses a foreach loop logic
				
		-->
		<flowLogic>
			<forEachLoop>
				<!-- first iteration set -->
				<iterationSet iterationVariableName="var1">
					<stringSet>
						<StdStringSet>
							<stringElement>Aa1</stringElement>
							<stringElement>Bb1</stringElement>
							<stringElement>Cc1</stringElement>
						</StdStringSet>
					</stringSet>
				</iterationSet>
				<!-- second iteration set -->
				<iterationSet iterationVariableName="var2">
					<stringSet>
						<StdStringSet>
							<stringElement>Aa3</stringElement>
							<stringElement>Bb3</stringElement>
							<stringElement>Cc3</stringElement>
						</StdStringSet>
					</stringSet>
				</iterationSet>
			</forEachLoop>
		</flowLogic>
		<!-- recall that loops must have only a single flow inside -->
		<Flow flowID="innerSequential">
			<flowLogic>
				<sequential/>
			</flowLogic>
			<!-- this step creates a collection by combining the two stringElements-->
			<Step stepID="createCollection">
			<Operation>
				<CreateOp>
					<StdParams>
						<DatagridObject>
							<CollectionNow>
								<StdCollection>
									<collectionName>$var1+$var2</collectionName>
								</StdCollection>
							</CollectionNow>
						</DatagridObject>
					</StdParams>
				</CreateOp>
			</Operation>
		</Step>
		</Flow>
	</Flow>
</DataGridRequest>
