//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.06.06 at 12:17:03 BST 
//


package edu.sdsc.matrix.srb.parser.impl;

public class ResourceImpl implements edu.sdsc.matrix.srb.parser.Resource, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected edu.sdsc.matrix.srb.parser.Resource.CapacityType _Capacity;
    protected java.lang.String _PhysicalLocation;
    protected edu.sdsc.matrix.srb.parser.Resource.LatencyType _Latency;
    protected edu.sdsc.matrix.srb.parser.Resource.ApproxBandwidthType _ApproxBandwidth;
    protected edu.sdsc.matrix.srb.parser.AnyType _ResourceType;
    protected java.math.BigInteger _MaxObjSize;
    protected boolean has_ResoureHierarchy;
    protected int _ResoureHierarchy;
    protected java.lang.String _LogicalName;
    protected java.lang.String _NetURI;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000f\u00c2.\u00b4ppsq\u0000~\u0000\u0000\r\u00f2vuppsq\u0000~\u0000\u0000\f\u008d\u00c3\u008appsq\u0000~\u0000\u0000\n\u00be\u000bKppsq\u0000~\u0000\u0000\b\u00eeS\fppsq\u0000~\u0000\u0000\bx\u00fa{ppsq\u0000~\u0000\u0000\u0007.S\u008dppsq\u0000~\u0000\u0000\u0005w\u00c5\u00eappsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00b6\u008d\u0093pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00b6\u008d\u0088sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxpq\u0000~\u0000\u001fq\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u000blogicalNamet\u0000(http://www.teragrid.org/schemas/datagridsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00c18Rppsq\u0000~\u0000\r\u0003\u00c18Gq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000,\u0003\u00c18<ppsq\u0000~\u0000\r\u0001\u00cf\u00b8$pp\u0000sq\u0000~\u0000,\u0001\u00cf\u00b8\u0019ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00cf\u00b8\u000eq\u0000~\u0000\u0016psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003\u0001\u00cf\u00b8\u000bq\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0015\u0001q\u0000~\u00008sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000(sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u00009psq\u0000~\u0000\'t\u0000\"edu.sdsc.matrix.srb.parser.AnyTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u00005\u0001\u00f1\u0080\u0016ppsr\u0000\u001ccom.sun.msv.grammar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000~\u0000\u0012L\u0000\u0004nameq\u0000~\u0000\u0013L\u0000\u0005valuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000\u0003\u0000 \u0016\u00b7ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0007booleansr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000!sq\u0000~\u0000%q\u0000~\u0000Gt\u0000\u0000q\u0000~\u00009sq\u0000~\u0000\'t\u0000\u0003nilt\u0000)http://www.w3.org/2001/XMLSchema-instancesq\u0000~\u0000\'t\u0000\fresourceTypeq\u0000~\u0000+q\u0000~\u0000=sq\u0000~\u0000,\u0001\u00b6\u008d\u009eppsq\u0000~\u0000\r\u0001\u00b6\u008d\u0093q\u0000~\u0000\u0016p\u0000q\u0000~\u0000\u0014sq\u0000~\u0000\'t\u0000\u0010physicalLocationq\u0000~\u0000+q\u0000~\u0000=sq\u0000~\u0000,\u0001J\u00a6\u00e9ppsq\u0000~\u0000\r\u0001J\u00a6\u00deq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0011\u0001J\u00a6\u00d3ppsr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0006anyURIq\u0000~\u0000Iq\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000Zq\u0000~\u0000\u001esq\u0000~\u0000\'t\u0000\u0006netURIq\u0000~\u0000+q\u0000~\u0000=sq\u0000~\u0000,\u0000uX\u008cppsq\u0000~\u0000\r\u0000uX\u0081q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0011\u0000uXvq\u0000~\u0000\u0016psr\u0000)com.sun.msv.datatype.xsd.UnsignedLongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\funsignedLongq\u0000~\u0000Iq\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000eq\u0000~\u0000\u001esq\u0000~\u0000\'t\u0000\nmaxObjSizeq\u0000~\u0000+q\u0000~\u0000=sq\u0000~\u0000,\u0001\u00cf\u00b8:ppsq\u0000~\u0000\r\u0001\u00cf\u00b8/q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\r\u0001\u00cf\u00b8$pp\u0000sq\u0000~\u0000,\u0001\u00cf\u00b8\u0019ppsq\u0000~\u00002\u0001\u00cf\u00b8\u000eq\u0000~\u0000\u0016psq\u0000~\u00005\u0001\u00cf\u00b8\u000bq\u0000~\u0000\u0016pq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u0000\'t\u0000/edu.sdsc.matrix.srb.parser.Resource.LatencyTypeq\u0000~\u0000@sq\u0000~\u0000\'t\u0000\u0007Latencyq\u0000~\u0000+q\u0000~\u0000=sq\u0000~\u0000,\u0001\u00cf\u00b8:ppsq\u0000~\u0000\r\u0001\u00cf\u00b8/q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\r\u0001\u00cf\u00b8$pp\u0000sq\u0000~\u0000,\u0001\u00cf\u00b8\u0019ppsq\u0000~\u00002\u0001\u00cf\u00b8\u000eq\u0000~\u0000\u0016psq\u0000~\u00005\u0001\u00cf\u00b8\u000bq\u0000~\u0000\u0016pq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u0000\'t\u00007edu.sdsc.matrix.srb.parser.Resource.ApproxBandwidthTypeq\u0000~\u0000@sq\u0000~\u0000\'t\u0000\u000fapproxBandwidthq\u0000~\u0000+q\u0000~\u0000=sq\u0000~\u0000,\u0001d\u00b2\u00e6ppsq\u0000~\u0000\r\u0001d\u00b2\u00dbq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0011\u0001d\u00b2\u00d0q\u0000~\u0000\u0016psr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000\u001et\u0000\u0003intq\u0000~\u0000Iq\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000\u0082q\u0000~\u0000\u001esq\u0000~\u0000\'t\u0000\u0010resoureHierarchyq\u0000~\u0000+q\u0000~\u0000=sq\u0000~\u0000,\u0001\u00cf\u00b8:ppsq\u0000~\u0000\r\u0001\u00cf\u00b8/q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\r\u0001\u00cf\u00b8$pp\u0000sq\u0000~\u0000,\u0001\u00cf\u00b8\u0019ppsq\u0000~\u00002\u0001\u00cf\u00b8\u000eq\u0000~\u0000\u0016psq\u0000~\u00005\u0001\u00cf\u00b8\u000bq\u0000~\u0000\u0016pq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u0000\'t\u00000edu.sdsc.matrix.srb.parser.Resource.CapacityTypeq\u0000~\u0000@sq\u0000~\u0000\'t\u0000\bcapacityq\u0000~\u0000+q\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u0091[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0019\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppq\u0000~\u0000/pppppppppppppppppppppq\u0000~\u0000-ppppppppppppppq\u0000~\u0000\bppppq\u0000~\u0000\u000bpppppppppq\u0000~\u0000\u0005ppppppppppppppq\u0000~\u00004q\u0000~\u0000Uq\u0000~\u0000mq\u0000~\u0000wq\u0000~\u0000\u008appppppq\u0000~\u00001q\u0000~\u0000lq\u0000~\u0000vq\u0000~\u0000\u0089ppppppq\u0000~\u0000Qpppppq\u0000~\u0000\tpppppppppppq\u0000~\u0000}ppq\u0000~\u0000\u0006pq\u0000~\u0000iq\u0000~\u0000sq\u0000~\u0000\u0086ppppppppq\u0000~\u0000\fppppppq\u0000~\u0000^pppq\u0000~\u0000\npppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0007p");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return edu.sdsc.matrix.srb.parser.Resource.class;
    }

    public edu.sdsc.matrix.srb.parser.Resource.CapacityType getCapacity() {
        return _Capacity;
    }

    public void setCapacity(edu.sdsc.matrix.srb.parser.Resource.CapacityType value) {
        _Capacity = value;
    }

    public java.lang.String getPhysicalLocation() {
        return _PhysicalLocation;
    }

    public void setPhysicalLocation(java.lang.String value) {
        _PhysicalLocation = value;
    }

    public edu.sdsc.matrix.srb.parser.Resource.LatencyType getLatency() {
        return _Latency;
    }

    public void setLatency(edu.sdsc.matrix.srb.parser.Resource.LatencyType value) {
        _Latency = value;
    }

    public edu.sdsc.matrix.srb.parser.Resource.ApproxBandwidthType getApproxBandwidth() {
        return _ApproxBandwidth;
    }

    public void setApproxBandwidth(edu.sdsc.matrix.srb.parser.Resource.ApproxBandwidthType value) {
        _ApproxBandwidth = value;
    }

    public edu.sdsc.matrix.srb.parser.AnyType getResourceType() {
        return _ResourceType;
    }

    public void setResourceType(edu.sdsc.matrix.srb.parser.AnyType value) {
        _ResourceType = value;
    }

    public java.math.BigInteger getMaxObjSize() {
        return _MaxObjSize;
    }

    public void setMaxObjSize(java.math.BigInteger value) {
        _MaxObjSize = value;
    }

    public int getResoureHierarchy() {
        return _ResoureHierarchy;
    }

    public void setResoureHierarchy(int value) {
        _ResoureHierarchy = value;
        has_ResoureHierarchy = true;
    }

    public java.lang.String getLogicalName() {
        return _LogicalName;
    }

    public void setLogicalName(java.lang.String value) {
        _LogicalName = value;
    }

    public java.lang.String getNetURI() {
        return _NetURI;
    }

    public void setNetURI(java.lang.String value) {
        _NetURI = value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new edu.sdsc.matrix.srb.parser.impl.ResourceImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://www.teragrid.org/schemas/datagrid", "logicalName");
        context.endAttributes();
        try {
            context.text(((java.lang.String) _LogicalName));
        } catch (java.lang.Exception e) {
            com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_ResourceType!= null) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "resourceType");
            if (_ResourceType instanceof edu.sdsc.matrix.srb.parser.AnyType) {
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ResourceType));
            } else {
                if (_ResourceType == null) {
                    context.startAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
                    try {
                        context.text("true");
                    } catch (java.lang.Exception e) {
                        com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                } else {
                    throw new org.xml.sax.SAXException("type mismatch error");
                }
            }
            context.endAttributes();
            if (_ResourceType instanceof edu.sdsc.matrix.srb.parser.AnyType) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ResourceType));
            } else {
                if (!(_ResourceType == null)) {
                    throw new org.xml.sax.SAXException("type mismatch error");
                }
            }
            context.endElement();
        }
        if (_PhysicalLocation!= null) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "physicalLocation");
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PhysicalLocation));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_NetURI!= null) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "netURI");
            context.endAttributes();
            try {
                context.text(((java.lang.String) _NetURI));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MaxObjSize!= null) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "maxObjSize");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MaxObjSize)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Latency!= null) {
            if (_Latency instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Latency));
            } else {
                context.startElement("http://www.teragrid.org/schemas/datagrid", "Latency");
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Latency));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Latency));
                context.endElement();
            }
        }
        if (_ApproxBandwidth!= null) {
            if (_ApproxBandwidth instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ApproxBandwidth));
            } else {
                context.startElement("http://www.teragrid.org/schemas/datagrid", "approxBandwidth");
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ApproxBandwidth));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ApproxBandwidth));
                context.endElement();
            }
        }
        if (has_ResoureHierarchy) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "resoureHierarchy");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ResoureHierarchy)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Capacity!= null) {
            if (_Capacity instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Capacity));
            } else {
                context.startElement("http://www.teragrid.org/schemas/datagrid", "capacity");
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Capacity));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Capacity));
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.sdsc.matrix.srb.parser.Resource.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class ApproxBandwidthTypeImpl implements edu.sdsc.matrix.srb.parser.Resource.ApproxBandwidthType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        protected java.math.BigInteger _Value;
        protected java.math.BigInteger _WorstCaseBW;
        protected java.math.BigInteger _BestCaseBW;
        protected boolean has_VarianceFromApprox;
        protected int _VarianceFromApprox;
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005\u00eahoppsq\u0000~\u0000\u0000\u0003~\u001e\rppsq\u0000~\u0000\u0000\u00019\u00e4\u00beppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000uXvsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000)com.sun.msv.datatype.xsd.UnsignedLongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0014L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\funsignedLongsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014xpq\u0000~\u0000\u0018q\u0000~\u0000\u0017sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00c4\u008cCppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003\u0000\u00c4\u008c8q\u0000~\u0000\rpq\u0000~\u0000\u000bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u000bworstCaseBWt\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\f\u0001psq\u0000~\u0000 \u0002D9Jppsq\u0000~\u0000\"\u0002D9?q\u0000~\u0000\rpq\u0000~\u0000\u000bsq\u0000~\u0000%t\u0000\nbestCaseBWq\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000 \u0002lJ]ppsq\u0000~\u0000\"\u0002lJRq\u0000~\u0000\rpsq\u0000~\u0000\b\u0001d\u00b2\u00d0q\u0000~\u0000\rpsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0010q\u0000~\u0000\u0017t\u0000\u0003intq\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u00006q\u0000~\u0000\u0017sq\u0000~\u0000%t\u0000\u0012varianceFromApproxq\u0000~\u0000)q\u0000~\u0000+sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000;[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0007pq\u0000~\u0000\u0005pppppppq\u0000~\u00001ppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000!pppppq\u0000~\u0000-pppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppp");

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return edu.sdsc.matrix.srb.parser.Resource.ApproxBandwidthType.class;
        }

        public java.math.BigInteger getValue() {
            return _Value;
        }

        public void setValue(java.math.BigInteger value) {
            _Value = value;
        }

        public java.math.BigInteger getWorstCaseBW() {
            return _WorstCaseBW;
        }

        public void setWorstCaseBW(java.math.BigInteger value) {
            _WorstCaseBW = value;
        }

        public java.math.BigInteger getBestCaseBW() {
            return _BestCaseBW;
        }

        public void setBestCaseBW(java.math.BigInteger value) {
            _BestCaseBW = value;
        }

        public int getVarianceFromApprox() {
            return _VarianceFromApprox;
        }

        public void setVarianceFromApprox(int value) {
            _VarianceFromApprox = value;
            has_VarianceFromApprox = true;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl.Unmarshaller(context);
        }

        public java.lang.Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS();
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Value)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_WorstCaseBW!= null) {
                context.startAttribute("", "worstCaseBW");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WorstCaseBW)));
                } catch (java.lang.Exception e) {
                    com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (_BestCaseBW!= null) {
                context.startAttribute("", "bestCaseBW");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BestCaseBW)));
                } catch (java.lang.Exception e) {
                    com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (has_VarianceFromApprox) {
                context.startAttribute("", "varianceFromApprox");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _VarianceFromApprox)));
                } catch (java.lang.Exception e) {
                    com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Value)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (edu.sdsc.matrix.srb.parser.Resource.ApproxBandwidthType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "--------");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  7 :
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  7 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  7 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                    case  0 :
                        if (("" == ___uri)&&("worstCaseBW" == ___local)) {
                            state = 1;
                            return ;
                        }
                        if (("" == ___uri)&&("varianceFromApprox" == ___local)) {
                            state = 5;
                            return ;
                        }
                        if (("" == ___uri)&&("bestCaseBW" == ___local)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  4 :
                        if (("" == ___uri)&&("bestCaseBW" == ___local)) {
                            goto0();
                            return ;
                        }
                        break;
                    case  6 :
                        if (("" == ___uri)&&("varianceFromApprox" == ___local)) {
                            goto0();
                            return ;
                        }
                        break;
                    case  2 :
                        if (("" == ___uri)&&("worstCaseBW" == ___local)) {
                            goto0();
                            return ;
                        }
                        break;
                    case  7 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(java.lang.String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  5 :
                            try {
                                _VarianceFromApprox = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_VarianceFromApprox = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 6;
                            return ;
                        case  3 :
                            try {
                                _BestCaseBW = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 4;
                            return ;
                        case  1 :
                            try {
                                _WorstCaseBW = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 2;
                            return ;
                        case  7 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            try {
                                _Value = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 7;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            private void goto0()
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                int idx;
                state = 0;
                idx = context.getAttribute("", "worstCaseBW");
                if (idx >= 0) {
                    context.consumeAttribute(idx);
                    return ;
                }
                idx = context.getAttribute("", "bestCaseBW");
                if (idx >= 0) {
                    context.consumeAttribute(idx);
                    return ;
                }
                idx = context.getAttribute("", "varianceFromApprox");
                if (idx >= 0) {
                    context.consumeAttribute(idx);
                    return ;
                }
            }

        }

    }

    public static class CapacityTypeImpl implements edu.sdsc.matrix.srb.parser.Resource.CapacityType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        protected java.math.BigInteger _Value;
        protected java.lang.String _MeasurementUnit;
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002\u00a2s\u00ccppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000uXvsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000)com.sun.msv.datatype.xsd.UnsignedLongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0012L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\funsignedLongsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000bpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xpq\u0000~\u0000\u0016q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003\u0002-\u001bQppsq\u0000~\u0000\u0006\u0001\u00b6\u008d\u0088q\u0000~\u0000\u000bpsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u000fq\u0000~\u0000\u0015t\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u0018\u0001q\u0000~\u0000\u001bsq\u0000~\u0000\u001cq\u0000~\u0000$q\u0000~\u0000\u0015sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u000fmeasurementUnitt\u0000\u0000sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000.[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0001\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp");

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return edu.sdsc.matrix.srb.parser.Resource.CapacityType.class;
        }

        public java.math.BigInteger getValue() {
            return _Value;
        }

        public void setValue(java.math.BigInteger value) {
            _Value = value;
        }

        public java.lang.String getMeasurementUnit() {
            return _MeasurementUnit;
        }

        public void setMeasurementUnit(java.lang.String value) {
            _MeasurementUnit = value;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new edu.sdsc.matrix.srb.parser.impl.ResourceImpl.CapacityTypeImpl.Unmarshaller(context);
        }

        public java.lang.Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS();
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Value)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "measurementUnit");
            try {
                context.text(((java.lang.String) _MeasurementUnit));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Value)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (edu.sdsc.matrix.srb.parser.Resource.CapacityType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "----");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return edu.sdsc.matrix.srb.parser.impl.ResourceImpl.CapacityTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        if (("" == ___uri)&&("measurementUnit" == ___local)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  2 :
                        if (("" == ___uri)&&("measurementUnit" == ___local)) {
                            goto0();
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(java.lang.String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  0 :
                            try {
                                _Value = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 3;
                            return ;
                        case  1 :
                            try {
                                _MeasurementUnit = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 2;
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            private void goto0()
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                int idx;
                state = 0;
                idx = context.getAttribute("", "measurementUnit");
                if (idx >= 0) {
                    context.consumeAttribute(idx);
                    return ;
                }
            }

        }

    }

    public static class LatencyTypeImpl implements edu.sdsc.matrix.srb.parser.Resource.LatencyType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        protected boolean has_Value;
        protected int _Value;
        protected boolean has_MaxLatency;
        protected int _MaxLatency;
        protected boolean has_MinLatency;
        protected int _MinLatency;
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006Q3\u008dppsq\u0000~\u0000\u0000\u0004\u0019\u00f8qppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001d\u00b2\u00d0sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0012L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0003intsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xpq\u0000~\u0000\u0016q\u0000~\u0000\u0015sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00b5E\u009cppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003\u0002\u00b5E\u0091q\u0000~\u0000\fpq\u0000~\u0000\nsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\nmaxLatencyt\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000b\u0001psq\u0000~\u0000\u001e\u00027;\u0017ppsq\u0000~\u0000 \u00027;\fq\u0000~\u0000\fpq\u0000~\u0000\nsq\u0000~\u0000#t\u0000\nminLatencyq\u0000~\u0000\'q\u0000~\u0000)sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u00000[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppppq\u0000~\u0000+pppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u001fpppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppp");

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return edu.sdsc.matrix.srb.parser.Resource.LatencyType.class;
        }

        public int getValue() {
            return _Value;
        }

        public void setValue(int value) {
            _Value = value;
            has_Value = true;
        }

        public int getMaxLatency() {
            return _MaxLatency;
        }

        public void setMaxLatency(int value) {
            _MaxLatency = value;
            has_MaxLatency = true;
        }

        public int getMinLatency() {
            return _MinLatency;
        }

        public void setMinLatency(int value) {
            _MinLatency = value;
            has_MinLatency = true;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl.Unmarshaller(context);
        }

        public java.lang.Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS();
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Value)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (has_MaxLatency) {
                context.startAttribute("", "maxLatency");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MaxLatency)));
                } catch (java.lang.Exception e) {
                    com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            if (has_MinLatency) {
                context.startAttribute("", "minLatency");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MinLatency)));
                } catch (java.lang.Exception e) {
                    com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Value)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (edu.sdsc.matrix.srb.parser.Resource.LatencyType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "------");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        if (("" == ___uri)&&("maxLatency" == ___local)) {
                            state = 4;
                            return ;
                        }
                        if (("" == ___uri)&&("minLatency" == ___local)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                    case  5 :
                        if (("" == ___uri)&&("maxLatency" == ___local)) {
                            goto0();
                            return ;
                        }
                        break;
                    case  2 :
                        if (("" == ___uri)&&("minLatency" == ___local)) {
                            goto0();
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(java.lang.String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  1 :
                            try {
                                _MinLatency = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_MinLatency = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 2;
                            return ;
                        case  0 :
                            try {
                                _Value = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_Value = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 3;
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            try {
                                _MaxLatency = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_MaxLatency = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 5;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            private void goto0()
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                int idx;
                state = 0;
                idx = context.getAttribute("", "maxLatency");
                if (idx >= 0) {
                    context.consumeAttribute(idx);
                    return ;
                }
                idx = context.getAttribute("", "minLatency");
                if (idx >= 0) {
                    context.consumeAttribute(idx);
                    return ;
                }
            }

        }

    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "----------------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return edu.sdsc.matrix.srb.parser.impl.ResourceImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  3 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("capacity" == ___local)) {
                        context.pushAttributes(__atts);
                        goto14();
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("Latency" == ___local)) {
                        context.pushAttributes(__atts);
                        goto8();
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("netURI" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 18;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("approxBandwidth" == ___local)) {
                        context.pushAttributes(__atts);
                        goto16();
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("physicalLocation" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 12;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("resoureHierarchy" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 10;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("resourceType" == ___local)) {
                        context.pushAttributes(__atts);
                        goto4();
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("maxObjSize" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 20;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  0 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("logicalName" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    break;
                case  4 :
                    if (true) {
                        _ResourceType = ((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl.class), 5, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  15 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("capacity" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  11 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("resoureHierarchy" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  13 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("physicalLocation" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  21 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("maxObjSize" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  17 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("approxBandwidth" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  19 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("netURI" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  5 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("resourceType" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  2 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("logicalName" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  9 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("Latency" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  3 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  4 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("resourceType" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  8 :
                    if (("" == ___uri)&&("maxLatency" == ___local)) {
                        _Latency = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl) spawnChildFromEnterAttribute((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl.class), 9, ___uri, ___local));
                        return ;
                    }
                    if (("" == ___uri)&&("minLatency" == ___local)) {
                        _Latency = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl) spawnChildFromEnterAttribute((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl.class), 9, ___uri, ___local));
                        return ;
                    }
                    break;
                case  16 :
                    if (("" == ___uri)&&("worstCaseBW" == ___local)) {
                        _ApproxBandwidth = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl) spawnChildFromEnterAttribute((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl.class), 17, ___uri, ___local));
                        return ;
                    }
                    if (("" == ___uri)&&("varianceFromApprox" == ___local)) {
                        _ApproxBandwidth = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl) spawnChildFromEnterAttribute((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl.class), 17, ___uri, ___local));
                        return ;
                    }
                    if (("" == ___uri)&&("bestCaseBW" == ___local)) {
                        _ApproxBandwidth = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl) spawnChildFromEnterAttribute((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl.class), 17, ___uri, ___local));
                        return ;
                    }
                    break;
                case  5 :
                    if (("http://www.w3.org/2001/XMLSchema-instance" == ___uri)&&("nil" == ___local)) {
                        state = 6;
                        return ;
                    }
                    break;
                case  14 :
                    if (("" == ___uri)&&("measurementUnit" == ___local)) {
                        _Capacity = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.CapacityTypeImpl) spawnChildFromEnterAttribute((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.CapacityTypeImpl.class), 15, ___uri, ___local));
                        return ;
                    }
                    break;
                case  3 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
                case  4 :
                    if (("http://www.w3.org/2001/XMLSchema-instance" == ___uri)&&("nil" == ___local)) {
                        state = 6;
                        return ;
                    }
                    break;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  7 :
                    if (("http://www.w3.org/2001/XMLSchema-instance" == ___uri)&&("nil" == ___local)) {
                        goto5();
                        return ;
                    }
                    break;
                case  3 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  8 :
                        _Latency = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl) spawnChildFromText((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.LatencyTypeImpl.class), 9, value));
                        return ;
                    case  10 :
                        try {
                            _ResoureHierarchy = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_ResoureHierarchy = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 11;
                        return ;
                    case  12 :
                        try {
                            _PhysicalLocation = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 13;
                        return ;
                    case  6 :
                        try {
                            _ResourceType = null;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 7;
                        return ;
                    case  16 :
                        _ApproxBandwidth = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl) spawnChildFromText((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.ApproxBandwidthTypeImpl.class), 17, value));
                        return ;
                    case  20 :
                        try {
                            _MaxObjSize = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 21;
                        return ;
                    case  14 :
                        _Capacity = ((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.CapacityTypeImpl) spawnChildFromText((edu.sdsc.matrix.srb.parser.impl.ResourceImpl.CapacityTypeImpl.class), 15, value));
                        return ;
                    case  1 :
                        try {
                            _LogicalName = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 2;
                        return ;
                    case  3 :
                        revertToParentFromText(value);
                        return ;
                    case  4 :
                        _ResourceType = ((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl) spawnChildFromText((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl.class), 5, value));
                        return ;
                    case  18 :
                        try {
                            _NetURI = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 19;
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  15 :
                    state = 15;
                    return ;
                case  5 :
                    goto5();
                    return ;
                case  9 :
                    state = 9;
                    return ;
                case  17 :
                    state = 17;
                    return ;
            }
            super.leaveChild(nextState);
        }

        private void goto8()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 8;
            idx = context.getAttribute("", "maxLatency");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "minLatency");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

        private void goto16()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 16;
            idx = context.getAttribute("", "worstCaseBW");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "bestCaseBW");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "varianceFromApprox");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

        private void goto5()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 5;
            idx = context.getAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

        private void goto14()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 14;
            idx = context.getAttribute("", "measurementUnit");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

        private void goto4()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 4;
            idx = context.getAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

    }

}
