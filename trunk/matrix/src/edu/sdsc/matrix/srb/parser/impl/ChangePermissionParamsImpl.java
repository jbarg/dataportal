//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.06.06 at 12:17:03 BST 
//


package edu.sdsc.matrix.srb.parser.impl;

public class ChangePermissionParamsImpl implements edu.sdsc.matrix.srb.parser.ChangePermissionParams, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected edu.sdsc.matrix.srb.parser.AnyType _AuditNewAccess;
    protected boolean has_Recursive;
    protected boolean _Recursive;
    protected boolean has_CollectionOnly;
    protected boolean _CollectionOnly;
    protected edu.sdsc.matrix.srb.parser.UserInfo _TargetUser;
    protected boolean has_DataSetOnly;
    protected boolean _DataSetOnly;
    protected edu.sdsc.matrix.srb.parser.StdDatagridObject _GridData;
    protected java.lang.String _NewPermission;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006\b\u00ab\u00eappsq\u0000~\u0000\u0000\u0005\u00e8\u0095\u000fppsq\u0000~\u0000\u0000\u0005\u00c8~4ppsq\u0000~\u0000\u0000\u0003\u00f8\u00c5\u00f5ppsq\u0000~\u0000\u0000\u0003\u00d8\u00af\u001appsq\u0000~\u0000\u0000\u0003\u009fpcppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00cf\u00b8/pp\u0000sq\u0000~\u0000\u000b\u0001\u00cf\u00b8$pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00cf\u00b8\u0019ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00cf\u00b8\u000esr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0001\u00cf\u00b8\u000bq\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0015\u0001q\u0000~\u0000\u001asr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001bpsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000,edu.sdsc.matrix.srb.parser.StdDatagridObjectt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000!t\u0000\bgridDatat\u0000(http://www.teragrid.org/schemas/datagridsq\u0000~\u0000\u000b\u0001\u00cf\u00b8/pp\u0000sq\u0000~\u0000\u000b\u0001\u00cf\u00b8$pp\u0000sq\u0000~\u0000\u0010\u0001\u00cf\u00b8\u0019ppsq\u0000~\u0000\u0012\u0001\u00cf\u00b8\u000eq\u0000~\u0000\u0016psq\u0000~\u0000\u0017\u0001\u00cf\u00b8\u000bq\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000#edu.sdsc.matrix.srb.parser.UserInfoq\u0000~\u0000%sq\u0000~\u0000!t\u0000\ntargetUserq\u0000~\u0000(sq\u0000~\u0000\u000b\u00009>\u00b2pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u00009>\u00a7ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\"xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000=t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000C\u0001q\u0000~\u0000Gt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u0005othert\u0000\u0005writet\u0000\u0004nonet\u0000\bannotatet\u0000\u0003allt\u0000\u0004readxsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpt\u0000\u000estring-derivedq\u0000~\u0000@sq\u0000~\u0000!t\u0000\rnewPermissionq\u0000~\u0000(sq\u0000~\u0000\u0010\u0000 \u0016\u00d6ppsq\u0000~\u0000\u000b\u0000 \u0016\u00cbq\u0000~\u0000\u0016p\u0000sq\u0000~\u00003\u0000 \u0016\u00c0ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Eq\u0000~\u0000Ht\u0000\u0007booleansr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Tsq\u0000~\u0000Uq\u0000~\u0000_q\u0000~\u0000Hsq\u0000~\u0000!t\u0000\trecursiveq\u0000~\u0000(q\u0000~\u0000 sq\u0000~\u0000\u0010\u0001\u00cf\u00b8:ppsq\u0000~\u0000\u000b\u0001\u00cf\u00b8/q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u000b\u0001\u00cf\u00b8$pp\u0000sq\u0000~\u0000\u0010\u0001\u00cf\u00b8\u0019ppsq\u0000~\u0000\u0012\u0001\u00cf\u00b8\u000eq\u0000~\u0000\u0016psq\u0000~\u0000\u0017\u0001\u00cf\u00b8\u000bq\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\"edu.sdsc.matrix.srb.parser.AnyTypeq\u0000~\u0000%sq\u0000~\u0000!t\u0000\u000eauditNewAccessq\u0000~\u0000(q\u0000~\u0000 sq\u0000~\u0000\u0010\u0000 \u0016\u00d6ppsq\u0000~\u0000\u000b\u0000 \u0016\u00cbq\u0000~\u0000\u0016p\u0000q\u0000~\u0000\\sq\u0000~\u0000!t\u0000\u000ecollectionOnlyq\u0000~\u0000(q\u0000~\u0000 sq\u0000~\u0000\u0010\u0000 \u0016\u00d6ppsq\u0000~\u0000\u000b\u0000 \u0016\u00cbq\u0000~\u0000\u0016p\u0000q\u0000~\u0000\\sq\u0000~\u0000!t\u0000\u000bdataSetOnlyq\u0000~\u0000(q\u0000~\u0000 sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000x[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0010\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppq\u0000~\u0000\npppppppppppppppq\u0000~\u0000\u0005ppppq\u0000~\u0000\u0007pppppppppppppq\u0000~\u0000\u0014q\u0000~\u0000,q\u0000~\u0000iq\u0000~\u0000Zq\u0000~\u0000oq\u0000~\u0000spppppq\u0000~\u0000\u0011q\u0000~\u0000+q\u0000~\u0000hpppppppppppppppppppppppppppppq\u0000~\u0000\bq\u0000~\u0000eppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppppp");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return edu.sdsc.matrix.srb.parser.ChangePermissionParams.class;
    }

    public edu.sdsc.matrix.srb.parser.AnyType getAuditNewAccess() {
        return _AuditNewAccess;
    }

    public void setAuditNewAccess(edu.sdsc.matrix.srb.parser.AnyType value) {
        _AuditNewAccess = value;
    }

    public boolean isRecursive() {
        return _Recursive;
    }

    public void setRecursive(boolean value) {
        _Recursive = value;
        has_Recursive = true;
    }

    public boolean isCollectionOnly() {
        return _CollectionOnly;
    }

    public void setCollectionOnly(boolean value) {
        _CollectionOnly = value;
        has_CollectionOnly = true;
    }

    public edu.sdsc.matrix.srb.parser.UserInfo getTargetUser() {
        return _TargetUser;
    }

    public void setTargetUser(edu.sdsc.matrix.srb.parser.UserInfo value) {
        _TargetUser = value;
    }

    public boolean isDataSetOnly() {
        return _DataSetOnly;
    }

    public void setDataSetOnly(boolean value) {
        _DataSetOnly = value;
        has_DataSetOnly = true;
    }

    public edu.sdsc.matrix.srb.parser.StdDatagridObject getGridData() {
        return _GridData;
    }

    public void setGridData(edu.sdsc.matrix.srb.parser.StdDatagridObject value) {
        _GridData = value;
    }

    public java.lang.String getNewPermission() {
        return _NewPermission;
    }

    public void setNewPermission(java.lang.String value) {
        _NewPermission = value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new edu.sdsc.matrix.srb.parser.impl.ChangePermissionParamsImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_GridData instanceof javax.xml.bind.Element) {
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _GridData));
        } else {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "gridData");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _GridData));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _GridData));
            context.endElement();
        }
        if (_TargetUser instanceof javax.xml.bind.Element) {
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TargetUser));
        } else {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "targetUser");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _TargetUser));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TargetUser));
            context.endElement();
        }
        context.startElement("http://www.teragrid.org/schemas/datagrid", "newPermission");
        context.endAttributes();
        try {
            context.text(((java.lang.String) _NewPermission));
        } catch (java.lang.Exception e) {
            com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_Recursive) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "recursive");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Recursive)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AuditNewAccess!= null) {
            if (_AuditNewAccess instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _AuditNewAccess));
            } else {
                context.startElement("http://www.teragrid.org/schemas/datagrid", "auditNewAccess");
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _AuditNewAccess));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _AuditNewAccess));
                context.endElement();
            }
        }
        if (has_CollectionOnly) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "collectionOnly");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CollectionOnly)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_DataSetOnly) {
            context.startElement("http://www.teragrid.org/schemas/datagrid", "dataSetOnly");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DataSetOnly)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.sdsc.matrix.srb.parser.ChangePermissionParams.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "------------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return edu.sdsc.matrix.srb.parser.impl.ChangePermissionParamsImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("gridData" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    break;
                case  4 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("gridTicket" == ___local)) {
                        _TargetUser = ((edu.sdsc.matrix.srb.parser.impl.UserInfoImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.UserInfoImpl.class), 5, ___uri, ___local, __atts));
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("userID" == ___local)) {
                        _TargetUser = ((edu.sdsc.matrix.srb.parser.impl.UserInfoImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.UserInfoImpl.class), 5, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  9 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("auditNewAccess" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 16;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("recursive" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 12;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("dataSetOnly" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 14;
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("collectionOnly" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 10;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  3 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("targetUser" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 4;
                        return ;
                    }
                    break;
                case  1 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("DataSetNow" == ___local)) {
                        _GridData = ((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl.class), 2, ___uri, ___local, __atts));
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("CollectionNow" == ___local)) {
                        _GridData = ((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl.class), 2, ___uri, ___local, __atts));
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("ADCnow" == ___local)) {
                        _GridData = ((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl.class), 2, ___uri, ___local, __atts));
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("ActiveDataSetNow" == ___local)) {
                        _GridData = ((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl.class), 2, ___uri, ___local, __atts));
                        return ;
                    }
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("ContainerNow" == ___local)) {
                        _GridData = ((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.StdDatagridObjectImpl.class), 2, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  6 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("newPermission" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 7;
                        return ;
                    }
                    break;
                case  16 :
                    if (true) {
                        _AuditNewAccess = ((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl) spawnChildFromEnterElement((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl.class), 17, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  2 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("gridData" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  11 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("collectionOnly" == ___local)) {
                        context.popAttributes();
                        state = 9;
                        return ;
                    }
                    break;
                case  13 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("recursive" == ___local)) {
                        context.popAttributes();
                        state = 9;
                        return ;
                    }
                    break;
                case  9 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  8 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("newPermission" == ___local)) {
                        context.popAttributes();
                        state = 9;
                        return ;
                    }
                    break;
                case  17 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("auditNewAccess" == ___local)) {
                        context.popAttributes();
                        state = 9;
                        return ;
                    }
                    break;
                case  15 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("dataSetOnly" == ___local)) {
                        context.popAttributes();
                        state = 9;
                        return ;
                    }
                    break;
                case  5 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("targetUser" == ___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
                case  16 :
                    if (("http://www.teragrid.org/schemas/datagrid" == ___uri)&&("auditNewAccess" == ___local)) {
                        _AuditNewAccess = ((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl) spawnChildFromLeaveElement((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl.class), 17, ___uri, ___local));
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  9 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  9 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  12 :
                        try {
                            _Recursive = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Recursive = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 13;
                        return ;
                    case  10 :
                        try {
                            _CollectionOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_CollectionOnly = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 11;
                        return ;
                    case  9 :
                        revertToParentFromText(value);
                        return ;
                    case  7 :
                        try {
                            _NewPermission = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 8;
                        return ;
                    case  14 :
                        try {
                            _DataSetOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_DataSetOnly = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 15;
                        return ;
                    case  16 :
                        _AuditNewAccess = ((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl) spawnChildFromText((edu.sdsc.matrix.srb.parser.impl.AnyTypeImpl.class), 17, value));
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  2 :
                    state = 2;
                    return ;
                case  17 :
                    state = 17;
                    return ;
                case  5 :
                    state = 5;
                    return ;
            }
            super.leaveChild(nextState);
        }

    }

}
