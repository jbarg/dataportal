Only in SRB-3.3.1-SDSC: admin
Only in SRB-3.3.1-SDSC: bin
Only in SRB-3.3.1-SDSC: config.guess
Only in SRB-3.3.1-SDSC: config.rescue
Only in SRB-3.3.1-SDSC: config.sub
Only in SRB-3.3.1-SDSC: configure
Only in SRB-3.3.1-SDSC: configure.in
Only in SRB-3.3.1-SDSC: configure.readme.srbteam
Only in SRB-3.3.1-SDSC: COPYRIGHT
Only in SRB-3.3.1-SDSC: CVS
Only in SRB-3.3.1-SDSC: data
Only in SRB-3.3.1-SDSC: errMsg
Only in SRB-3.3.1-SDSC: installServer.pl
Only in SRB-3.3.1-SDSC: install.sh
Only in SRB-3.3.1-SDSC: jargon
Only in SRB-3.3.1-SDSC: java
Only in SRB-3.3.1-SDSC: Makefile.in
Only in SRB-3.3.1-SDSC: matrix
Only in SRB-3.3.1-SDSC: MCAT
Only in SRB-3.3.1-SDSC: mk
Only in SRB-3.3.1-SDSC: mySRB
Only in SRB-3.3.1-SDSC: NT
Only in SRB-3.3.1-SDSC: preload
Only in SRB-3.3.1-SDSC: .project
Only in SRB-3.3.1-SDSC: proxy
Only in SRB-3.3.1-SDSC: python
Only in SRB-3.3.1-SDSC: readme.dir
Only in SRB-3.3.1-SDSC/src: auth.txt
Only in SRB-3.3.1-SDSC/src/back: adsFileDvr.c
Only in SRB-3.3.1-SDSC/src/back: antelopeOrbDvr.c
Only in SRB-3.3.1-SDSC/src/back: compoundObj.c
Only in SRB-3.3.1-SDSC/src/back: CVS
Only in SRB-3.3.1-SDSC/src/back: datascopeDvr.c
Only in SRB-3.3.1-SDSC/src/back: db2DvrLib.c
Only in SRB-3.3.1-SDSC/src/back: db2TableDvr.c
Only in SRB-3.3.1-SDSC/src/back: dbLobj.c
Only in SRB-3.3.1-SDSC/src/back: dbTable.c
Only in SRB-3.3.1-SDSC/src/back: distrib.c
Only in SRB-3.3.1-SDSC/src/back: dpssFileDvr.c
Only in SRB-3.3.1-SDSC/src/back: exfFunct.c
Only in SRB-3.3.1-SDSC/src/back: exfSw.c
Only in SRB-3.3.1-SDSC/src/back: ftpFileDvr.c
Only in SRB-3.3.1-SDSC/src/back: functionHandler.c
Only in SRB-3.3.1-SDSC/src/back: gridftpDvr.c
Only in SRB-3.3.1-SDSC/src/back: hpssFileDvr.c
Only in SRB-3.3.1-SDSC/src/back: hpssParaOpr.c
Only in SRB-3.3.1-SDSC/src/back: ifmxDvrLib.c
Only in SRB-3.3.1-SDSC/src/back: ifmxTableDvr.c
Only in SRB-3.3.1-SDSC/src/back: illusTableDvr.c
Only in SRB-3.3.1-SDSC/src/back: illustraDB.c
Only in SRB-3.3.1-SDSC/src/back: MDriver.c
Only in SRB-3.3.1-SDSC/src/back: mysDvrLib.c
Only in SRB-3.3.1-SDSC/src/back: mysTableDvr.c
Only in SRB-3.3.1-SDSC/src/back: ntFileDvr.c
Only in SRB-3.3.1-SDSC/src/back: objBulkFunct.c
diff -ru SRB-3.3.1-SDSC/src/back/objContainerFunct.c srb-patches/Ssyncont cache selection patch/src/back/objContainerFunct.c
--- SRB-3.3.1-SDSC/src/back/objContainerFunct.c	2005-06-29 13:31:28.000000000 +0100
+++ srb-patches/Ssyncont cache selection patch/src/back/objContainerFunct.c	2005-08-01 09:49:25.000000000 +0100
@@ -6,6 +6,7 @@
 Please read these files before using,modifying or distributing SRB software.
 **************************************************************************/
 
+#define SYNC_CONT_DEBUG
 
 /* objContainerFunct.c - Routines to handle Container Object type SID.
  */
@@ -24,6 +25,7 @@
     int lockFd = -1;
     int remoteFlag;
     struct hostElement  *hostTabPtr;
+    srb_long_t lstatus;
 
     /* Check for TicketUser should have been done by the calling routine */
 
@@ -99,11 +101,11 @@
 
     /* Seek to the baseOffset */
 
-    status = _svrObjSeek (descInx, 0, SEEK_SET);
+    lstatus = _svrObjSeek (descInx, 0, SEEK_SET);
 
-    if (status < 0) {
-	elog(NOTICE, "inContainerObjCreate: _svrObjSeek error, status = %d ",
-	 status);
+    if (lstatus < 0) {
+	elog(NOTICE, "inContainerObjCreate: _svrObjSeek error, status = ll%d ",
+	 lstatus);
 	svrObjClose (descInx);
 	return status;
     }
@@ -152,6 +154,7 @@
     char fullContName[MAX_TOKEN];
     int remoteFlag;
     struct hostElement  *hostTabPtr;
+    srb_long_t lstatus;
 
     /* Check for TicketUser should have been done by the calling routine */
 
@@ -196,12 +199,13 @@
 
     /* Seek to the baseOffset */
 
-    status = _svrObjSeek (descInx, 0, SEEK_SET);
+    lstatus = _svrObjSeek (descInx, 0, SEEK_SET);
 
-    if (status < 0) {
-	elog(NOTICE, "inContainerObjCreate: _svrObjSeek error, status = %d ",
-	 status);
+    if (lstatus < 0) {
+	elog(NOTICE, "inContainerObjCreate: _svrObjSeek error, status = %lld ",
+	 lstatus);
 	svrObjClose (descInx);
+	status = lstatus;
 	return status;
     }
 
@@ -1118,8 +1122,12 @@
     int remoteFlag;
     struct hostElement  *hostTabPtr;
     struct resCache *myResCache;
+    srb_long_t maxContSize;
 
-    if (containerSize > MAX_CONTAINER_SIZE) {
+    maxContSize = MAX_CONTAINER_SIZE;
+    maxContSize = maxContSize * 1024*1024;
+
+    if (containerSize > maxContSize) {
 	return (OBJ_ERR_MAX_SIZE_EXCEEDED);
     } else if (containerSize <= 0) {
 	containerSize = DEF_CONTAINER_SIZE;
@@ -1335,6 +1343,7 @@
     int contInx, retVal;
     char *accessMode;
     int lockFd = -1;
+    int creatFlag = 0;	/* used to see if container needs extended */ 
 
     if (TicketUserFlag) {
         elog (NOTICE, "Illegal operation for a ticket user");
@@ -1343,14 +1352,19 @@
 
     /* Take out flag such as O_APPEND, O_TRUNC etc for container IO
      */
-    if (openFlag & O_WRONLY)
+    if (openFlag & O_WRONLY) {
         myOpenFlag = O_WRONLY;
-    else if (openFlag & O_RDWR)
+	creatFlag = 1;
+    } else if (openFlag & O_RDWR) {
         myOpenFlag = O_RDWR;
-    else if (openFlag & O_RDONLY)
+	creatFlag = 1;
+    } else if (openFlag & O_RDONLY) {
         myOpenFlag = O_RDONLY;
-    else
+	creatFlag = 0;
+    } else {
         myOpenFlag = O_RDONLY;
+	creatFlag = 0;
+    }
 
     accessMode = openFlagLookUp (myOpenFlag);
     if (accessMode == NULL) {
@@ -1383,8 +1397,8 @@
 
     /* Do a mdasGetInfo on the container */
 
-    contInx = resolveContainer (MDAS_CATALOG, myOpenFlag, 1, outContName,
-     contCollection);
+    contInx = resolveContainer (MDAS_CATALOG, myOpenFlag, creatFlag, 
+     outContName, contCollection);
 
 #ifdef LOCK_OBJ
     if (contInx >= 0) {
@@ -1442,6 +1456,7 @@
     int descInx, contInx;
     char outContName[MAX_TOKEN], contCollection[MAX_TOKEN];
     int myOpenFlag;
+    srb_long_t lstatus;
 
     /* Take out flag such as O_APPEND, O_TRUNC etc for container IO
      */
@@ -1500,12 +1515,13 @@
 
     /* Seek to the baseOffset */
 
-    status = _svrObjSeek (descInx, 0, SEEK_SET);
+    lstatus = _svrObjSeek (descInx, 0, SEEK_SET);
 
-    if (status < 0) {
-        elog(NOTICE, "inContainerObjOpen: _svrObjSeek error, status = %d ",
-         status);
+    if (lstatus < 0) {
+        elog(NOTICE, "inContainerObjOpen: _svrObjSeek error, lstatus = %lld ",
+         lstatus);
 	svrObjClose (descInx);
+	status = lstatus;
         return status;
     }
 
@@ -1742,6 +1758,7 @@
         return (retVal);
     }
 
+#ifdef foo      /* why are we going to MCAT ?. commented out mw 7/28/05 */
     remoteFlag = getMdasEnabledHost (contCollection, &hostTabPtr);
 
     if (remoteFlag < 0) {
@@ -1755,6 +1772,7 @@
         }
 	return (retVal);
     }
+#endif
 
     infoInp.domainName = ClientUser->domainName;
     infoInp.accessMode = "all";
@@ -1897,7 +1915,7 @@
         tmpInfoOut = cacheInfoOut;
         while (tmpInfoOut != NULL) {
             nextInfoOut = tmpInfoOut->next;
-            _rmContainerCopy (catType, containerName, contCollection,
+            _rmContainerCopy (catType, outContName, contCollection,
              tmpInfoOut);
             tmpInfoOut = nextInfoOut;
         }
@@ -1906,6 +1924,10 @@
 
     	/* File copy - use the dirtyCacheInfoOut as source first */
 
+#ifdef SYNC_CONT_DEBUG
+        elog (NOTICE, 
+	  "Container copy used for sync = %s", dirtyCacheInfoOut->resourceName);
+#endif
 	status = syncInfoToInfo (dirtyCacheInfoOut, contCollection,
 	  archInfoOut, contCollection, 0);
 
@@ -1939,7 +1961,10 @@
         permInfoOut = empArchInfoOut;
         while (permInfoOut != NULL) {
 	    struct mdasInfoOut *newInfoOut;
-
+#ifdef SYNC_CONT_DEBUG
+        elog (NOTICE, 
+          "Container copy used for sync = %s", srcInfoOut->resourceName);
+#endif
 	    retVal = _objReplicate (catType, outContName, contCollection,
              permInfoOut->resourceName, "", srcInfoOut, &newInfoOut, NULL);
 
Only in SRB-3.3.1-SDSC/src/back: objMcatAdminFunct.c
Only in SRB-3.3.1-SDSC/src/back: objMcatOprFunct.c
diff -ru SRB-3.3.1-SDSC/src/back/objMiscIoFunct.c srb-patches/Ssyncont cache selection patch/src/back/objMiscIoFunct.c
--- SRB-3.3.1-SDSC/src/back/objMiscIoFunct.c	2005-06-29 13:31:28.000000000 +0100
+++ srb-patches/Ssyncont cache selection patch/src/back/objMiscIoFunct.c	2005-08-01 09:49:35.000000000 +0100
@@ -322,7 +322,7 @@
          resClassEntries[resClassInx].primary == 1) {
             queInfoOut (&priArchInfoOut, tmpInfoOut, 1, topFlag);
         } else if (resClassEntries[resClassInx].permanent == 0 &&
-         resClassEntries[resClassInx].primary == 1) {
+         (resClassEntries[resClassInx].primary == 1 || topFlag == 1)) {
             queInfoOut (&priCacheInfoOut, tmpInfoOut, 1, topFlag);
         } else if (resClassEntries[resClassInx].permanent == 1 &&
          resClassEntries[resClassInx].primary == 0) {
Only in SRB-3.3.1-SDSC/src/back: objParaIoFunct.c
Only in SRB-3.3.1-SDSC/src/back: objSeqIoFunct.c
Only in SRB-3.3.1-SDSC/src/back: oraDvrLib.c
Only in SRB-3.3.1-SDSC/src/back: oraTableDvr.c
Only in SRB-3.3.1-SDSC/src/back: orbUtil.c
Only in SRB-3.3.1-SDSC/src/back: psgDvrLib.c
Only in SRB-3.3.1-SDSC/src/back: psgTableDvr.c
Only in SRB-3.3.1-SDSC/src/back: srbC_db2_library.c
Only in SRB-3.3.1-SDSC/src/back: srbC_httpc_library.c
Only in SRB-3.3.1-SDSC/src/back: srbC_ora_library.c
Only in SRB-3.3.1-SDSC/src/back: srbProxyFunct.c
Only in SRB-3.3.1-SDSC/src/back: srbServer.c
Only in SRB-3.3.1-SDSC/src/back: srbServerMisc.c
Only in SRB-3.3.1-SDSC/src/back: srbServerSfo.c
Only in SRB-3.3.1-SDSC/src/back: sybDvrLib.c
Only in SRB-3.3.1-SDSC/src/back: sybTableDvr.c
Only in SRB-3.3.1-SDSC/src/back: unixFileDvr.c
Only in SRB-3.3.1-SDSC/src/back: utFileDvr.c
Only in SRB-3.3.1-SDSC/src: catalog
Only in SRB-3.3.1-SDSC/src: client
Only in SRB-3.3.1-SDSC/src: CVS
Only in SRB-3.3.1-SDSC/src: front
Only in SRB-3.3.1-SDSC/src: include
Only in SRB-3.3.1-SDSC/src: lib
Only in SRB-3.3.1-SDSC/src: nt_util
Only in SRB-3.3.1-SDSC: tape
Only in SRB-3.3.1-SDSC: test
Only in SRB-3.3.1-SDSC: unixIO
Only in SRB-3.3.1-SDSC: utilities
