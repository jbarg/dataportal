
/*
 * MyProxy.java
 *
 * Created on 27 March 2003, 15:56
 */




package uk.ac.dl.myproxy;

import java.util.Properties;
import javax.swing.*;
import org.gridforum.jgss.*;
import org.ietf.jgss.*;
import java.awt.event.*;
import java.net.*;
import java.io.*;
import org.globus.gsi.*;
import org.globus.gsi.gssapi.*;
import org.globus.common.CoGProperties;
import java.security.cert.*;
import org.globus.gsi.bc.*;
import java.security.PrivateKey;
import java.awt.event.*;

/**
 *
 * @author  gjd37
 */
public class MyProxyInsert extends javax.swing.JDialog {
    
    
    private String _username = "";
    private String _password = "";
    private String _gridpassphrase = "";
    /** Creates new form MyProxy */
    public MyProxyInsert(javax.swing.JFrame  parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        ok = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pass2 = new javax.swing.JPasswordField();
        pass1 = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        gridpass = new javax.swing.JPasswordField();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("MyProxy Send Details");
        setFocusCycleRoot(false);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel1.setText("Username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("MyProxy PassPhrase");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Re-enter PassPhrase");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
        getContentPane().add(jLabel3, gridBagConstraints);

        username.setNextFocusableComponent(pass1);
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 2.0;
        getContentPane().add(username, gridBagConstraints);

        cancel.setMnemonic('c');
        cancel.setText("Cancel");
        cancel.setToolTipText("");
        cancel.setNextFocusableComponent(ok);
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        getContentPane().add(cancel, gridBagConstraints);

        ok.setMnemonic('o');
        ok.setText("Ok");
        ok.setToolTipText("");
        ok.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.white, java.awt.Color.black, java.awt.Color.darkGray));
        ok.setMaximumSize(new java.awt.Dimension(67, 25));
        ok.setMinimumSize(new java.awt.Dimension(67, 25));
        ok.setPreferredSize(new java.awt.Dimension(67, 25));
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        ok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                okKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 54, 0, 0);
        getContentPane().add(ok, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        pass2.setNextFocusableComponent(gridpass);
        pass2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pass2KeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        getContentPane().add(pass2, gridBagConstraints);

        pass1.setNextFocusableComponent(pass2);
        pass1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pass1KeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        getContentPane().add(pass1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 17, 0, 17);
        getContentPane().add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 7);
        getContentPane().add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 7);
        getContentPane().add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 7);
        getContentPane().add(jLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        getContentPane().add(jLabel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jLabel11, gridBagConstraints);

        jLabel12.setText("Grid PassPhrase");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        getContentPane().add(jLabel12, gridBagConstraints);

        gridpass.setNextFocusableComponent(ok);
        gridpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gridpassKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        getContentPane().add(gridpass, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-320)/2, (screenSize.height-170)/2, 320, 170);
    }//GEN-END:initComponents

    private void cancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) cancel.doClick();
    }//GEN-LAST:event_cancelKeyPressed

    private void okKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_okKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) ok.doClick();
    }//GEN-LAST:event_okKeyPressed

    private void gridpassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gridpassKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) ok.doClick();
    }//GEN-LAST:event_gridpassKeyPressed

    private void pass2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass2KeyPressed
        // TODO add your handling code here:
         if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) ok.doClick();
    }//GEN-LAST:event_pass2KeyPressed

    private void pass1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass1KeyPressed
        // TODO add your handling code here:
         if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) ok.doClick();
    }//GEN-LAST:event_pass1KeyPressed

    private void usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) ok.doClick();
    }//GEN-LAST:event_usernameKeyPressed
    
    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // Add your handling code here:
        _username = username.getText();
        _password = pass1.getText();
        _gridpassphrase = gridpass.getText();
        
        if(_username.equals("") || _password.equals("")){
            JOptionPane.showMessageDialog(this,"Please enter a value for the username and/or password","Need More Information" ,  JOptionPane.WARNING_MESSAGE);
            return;
            
        }
        if(_gridpassphrase.equals("")){
            JOptionPane.showMessageDialog(this,"Please enter a value for the Grid PassPhrase","Need More Information" ,  JOptionPane.WARNING_MESSAGE);
            return;
            
        }
        String passwordre = pass2.getText();
        if(!_password.equals(passwordre)){
            JOptionPane.showMessageDialog(this,"Password do not match","Need More Information" ,  JOptionPane.WARNING_MESSAGE);
            pass1.setText("");
            pass2.setText("");
            
        }
        else{
            //all ok, now try and put into myproxy
            
            putIntoMyProxy();
            
            //setVisible(true);
        }
        
        
    }//GEN-LAST:event_okActionPerformed
    
    
     private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
         // Add your handling code here:
         // dispose();
         //setVisible(true);
         //  jTextField1
         //    jPasswordField1.setText("");
         //     jPasswordField2.setText("");
         
         _username ="";
         _password = "";
         _gridpassphrase  = "";
         dispose();
     }//GEN-LAST:event_cancelActionPerformed
     
     /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        _username ="";
        _password = "";
        _gridpassphrase  = "";
        dispose();
        //setVisible(true);
    }//GEN-LAST:event_closeDialog
    
    
    private void putIntoMyProxy() {
        
        final JLabel msgLabel = new JLabel("Sending proxy...");
        final JProgressBar progressBar = new JProgressBar(0, 10);
        
        progressBar.setValue(0);
        
        Object [] comp = {msgLabel, progressBar};
        Object [] options = { "Cancel" };
        
        JOptionPane pane = new JOptionPane(comp,
        JOptionPane.DEFAULT_OPTION,
        JOptionPane.INFORMATION_MESSAGE,
        null,
        options,
        options[0]);
        
        final JDialog dialog = pane.createDialog(this, "Contacting MyProxy Server..");
        
        final Task task = new Task();
        
        Timer timer = new Timer(250, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (task.isDone()) {
                    dialog.dispose();
                } else {
                    progressBar.setValue( (progressBar.getValue()+1) % 10 );
                }
            }
        });
        
        timer.start();
        task.start();
        
        try { Thread.sleep(500); } catch(Exception e) {}
        
        Object selectedValue = null;
        
        if (task.getException() == null) {
            
            dialog.show();
            selectedValue = pane.getValue();
        } else {
            selectedValue = JOptionPane.UNINITIALIZED_VALUE;
        }
        
        timer.stop();
        
        if (selectedValue == null || selectedValue == options[0]) {
            // window closed by user or cancel pressed
            task.cancel(); // <-- this does not work!!!!
            //proxy = null;
        } else if (selectedValue == JOptionPane.UNINITIALIZED_VALUE) {
            // task finished
            Throwable e = task.getException();
            //System.out.println(e.getMessage());
            if (e == null) {
                
                //proxy = task.getProxy();
                JOptionPane.showMessageDialog(this,
                "Proxy was successfully uploaded.",
                "Proxy upload",
                JOptionPane.INFORMATION_MESSAGE);
                
                
                
                
                
                dispose();
                
                
            }
            //For the web start.  Current version of Cog Kit 1.1 with jce-jdk117.jar.  jce-jdk117.jar has been
            // signed by the wrong JCE private key and therefore web start will not allow it to be downloaded
            // (any webstart with jdk 1.4 wont, i think 1.3 will) So web start version does not come with
            // bouncy castle jar files.  This needs to be downloaded seperatley.  So so this error.
            else if(e instanceof NoClassDefFoundError){
                JOptionPane.showMessageDialog(this,e.getMessage()+"\nMake sure you have downloaded the Bouncy Castle jar file.","Error",  JOptionPane.ERROR_MESSAGE);
                
            }
            //Current version of Cog Kit 1.1 with jce-jdk117.jar throws this error on certain OS.  Not sure why.
            //Show error and explain to the user
            else if(e.getMessage().startsWith("org.bouncycastle.asn1.x509.X509Extension.getValue()") || e instanceof java.lang.NoSuchMethodError ){
                
                //test if old jce in class path
                String java_home = System.getProperty("java.home");
                File jce = new File(java_home+File.separator+"lib"+File.separator+"ext"+File.separator+"jce-jdk13-117.jar");
                File jce2 = new File(java_home+"jre"+File.separator+"lib"+File.separator+"lib"+File.separator+"ext"+File.separator+"jce-jdk13-117.jar");
                
                if(jce.exists()){
                    JOptionPane.showMessageDialog(this,
                    "You have an old version of the jce security classes in your java classpath.\nPlease remove "+jce.getAbsolutePath()+"\nAll java applications need to be closed before it can be removed.",
                    "Data Portal Proxy Error",
                    JOptionPane.ERROR_MESSAGE);
                    
                }
                else if(jce2.exists()){
                    JOptionPane.showMessageDialog(this,
                    "You have an old version of the jce security classes in you class path.\nPlease remove "+jce2.getAbsolutePath()+"\nAll java applications need to be closed before it can be removed",
                    "Data Portal Proxy Error",
                    JOptionPane.ERROR_MESSAGE);
                    
                }
                else{
                    JOptionPane.showMessageDialog(this,
                    "The Java Cog Kit used with the Data Portal Proxy does not fully support this Operating System.\nSending your credentials into the MyProxy Server does not work.\nPlease try the Data Portal Proxy with another OS.",
                    "Data Portal Proxy Error",
                    JOptionPane.ERROR_MESSAGE);
                }
            }
            else if(e instanceof javax.crypto.BadPaddingException){
                JOptionPane.showMessageDialog(this,
                "Failed to send proxy: " +  e.getMessage()+"\nIs your Grid PassPhrase correct?",
                "Proxy send Error",
                JOptionPane.ERROR_MESSAGE);
                gridpass.setText("");
                setVisible(true);
            }
            //anything else show error.
            else {
                
                //proxy = null;
                JOptionPane.showMessageDialog(this,
                "Failed to send proxy: " + e.getMessage(),
                "Proxy send Error",
                JOptionPane.ERROR_MESSAGE);
                setVisible(true);
            }
        } else {
            //proxy = null;
        }
        
    }
    
    
    class Task extends Thread {
        private boolean done = false;
        private Throwable exception = null;
        private boolean cancel = false;
        //private GlobusCredential proxy = null;
        
        public boolean isDone() {
            return done;
        }
        
        public void cancel() {
            cancel = true;
        }
        
        public boolean isCancelled() {
            return cancel;
        }
        public Throwable getException() {
            return exception;
        }
        
        
        public void run() {
            try{
                //get into out of the myproxy.properties file
                File myproxy = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"myproxy.properties");
                
                if(!myproxy.exists())throw new Exception("Please configure the MyProxy properties first");
                Properties prop = new Properties();
                prop.load(new FileInputStream(myproxy));
                
                
                String _strength = prop.getProperty("proxy_strength");
                int strength = Integer.parseInt(_strength);
                String _proxy_lifetime =  prop.getProperty("proxy_lifetime");
                int proxy_lifetime = Integer.parseInt(_proxy_lifetime);
                String _credential_lifetime = prop.getProperty("credential_lifetime");
                int credential_lifetime = Integer.parseInt(_credential_lifetime);
                String dn = prop.getProperty("server_dn");
                String _port = prop.getProperty("server_port");
                int port = Integer.parseInt(_port);
                String name = prop.getProperty("server_url");
                
                
                /// New section to put into myproxy
                org.globus.myproxy.MyProxy proxy1 = new  org.globus.myproxy.MyProxy(name,port);
                CoGProperties properties = CoGProperties.getDefault();
                String usercert= properties.getUserCertFile();
                String userkey= properties.getUserKeyFile();
                
                //gte users X059 cert and privaye key
                X509Certificate X509Cert = CertUtil.loadCertificate(usercert);
                OpenSSLKey key = new BouncyCastleOpenSSLKey( userkey );
                key.decrypt( _gridpassphrase );
                PrivateKey issuerKey = key.getPrivateKey();
                
                //create proxy credential
                BouncyCastleCertProcessingFactory certFactory = BouncyCastleCertProcessingFactory.getDefault();
                GlobusCredential delegateCred  = certFactory.createCredential( new X509Certificate[] { X509Cert},issuerKey,strength, credential_lifetime*3600, GSIConstants.DELEGATION_FULL );
                GSSCredential cred = new GlobusGSSCredentialImpl(delegateCred, GSSCredential.INITIATE_AND_ACCEPT);
                
                System.out.println("Created Proxy Credential");
                System.out.println("Credential info:");
                System.out.println("Subject : "+cred.getName());
                System.out.println("LifeTime : "+cred.getRemainingLifetime());
                
                //when putting it into MyProxy, specify that maximum time that the proxy can be
                //taken out for.  IE 2 hours.
                proxy1.put(cred, _username, _password, proxy_lifetime*3600);
                
                done= true;
                //end of new section
                
                
                
                
            }
            catch(NoClassDefFoundError b){
                b.printStackTrace();
                done= true;
                
                exception =  b;
            }
            catch(Throwable e){
                System.out.println(e);
                done= true;
                exception =  e;
                
            }
        }
        
        
    }
    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        new MyProxy(new javax.swing.JFrame(), true).show();
    }*/
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JPasswordField gridpass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton ok;
    private javax.swing.JPasswordField pass1;
    private javax.swing.JPasswordField pass2;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
    
}
