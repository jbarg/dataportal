/*
 * MyProxyMain.java
 *
 * Created on 28 March 2003, 11:23
 */
package uk.ac.dl.myproxy;


import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import org.gridforum.jgss.*;
import org.globus.gsi.*;
import org.ietf.jgss.*;
import org.globus.common.*;
import org.globus.util.Util;
import java.security.cert.X509Certificate;
import org.globus.tools.ui.util.*;

/**
 *
 * @author  gjd37
 */
public class MyProxyMain extends javax.swing.JFrame{
    MyProxyCredentialsProperties myproxydai;
    private String username;
    private String password;
    
    private boolean checkJCE = false;
    private boolean warned = false;
    private File cog_dir;
    private File cog_properties;
    
    UIManager.LookAndFeelInfo looks[];
    String lookandfeel_user = "javax.swing.plaf.metal.MetalLookAndFeel";
    MyProxyChangePassword passwd = null;
    MyProxyInsert myinsert = null;
    MyProxyGet myget = null;
    MyProxy_Help myproxyhelp = null;
    org.globus.tools.proxy.GridProxyInit grid = null;
    uk.ac.dl.myproxy.ConfigurationWizard conf = null;
    
    /** Creates new form MyProxyMain */
    public MyProxyMain() {
        
        initComponents();
        initMyCom();
        
        
        setLookandFeel(null,true);
    }
    
    private void initMyCom(){
        cog_dir = new File(System.getProperty("user.home")+File.separator+".globus");
        cog_properties = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"cog.properties");
        
        looks = UIManager.getInstalledLookAndFeels();
        for(int i = 0 ; i < looks.length; i++){
            System.out.println(looks[i].getClassName());
            
        }
        
        //sets if lnf is avaliable
        liquid.setEnabled(isAvailableLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel"));
        windows.setEnabled(isAvailableLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel"));
        gtk.setEnabled(isAvailableLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel"));
        motif.setEnabled(isAvailableLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel"));
        metal.setEnabled(isAvailableLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel"));
        mac.setEnabled(isAvailableLookAndFeel("javax.swing.plaf.mac.MacLookAndFeel"));
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * Information: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTextArea5 = new javax.swing.JTextArea();
        menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        lookandfeel = new javax.swing.JMenu();
        metal = new javax.swing.JRadioButtonMenuItem();
        motif = new javax.swing.JRadioButtonMenuItem();
        windows = new javax.swing.JRadioButtonMenuItem();
        liquid = new javax.swing.JRadioButtonMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        mac = new javax.swing.JRadioButtonMenuItem();
        gtk = new javax.swing.JRadioButtonMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        exit = new javax.swing.JMenuItem();
        configuration = new javax.swing.JMenu();
        setup = new javax.swing.JMenuItem();
        myproxy = new javax.swing.JMenu();
        send = new javax.swing.JMenuItem();
        retrieve = new javax.swing.JMenuItem();
        configure = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        credentials = new javax.swing.JMenu();
        changepassword = new javax.swing.JMenuItem();
        info = new javax.swing.JMenuItem();
        cog = new javax.swing.JMenu();
        createproxy = new javax.swing.JMenuItem();
        proxyinfo = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("MyProxy Upload Tool");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Information"));
        jPanel1.setAutoscrolls(true);
        jPanel1.setMinimumSize(new java.awt.Dimension(220, 52));
        jPanel1.setPreferredSize(new java.awt.Dimension(240, 140));
        jPanel1.setVerifyInputWhenFocusTarget(false);
        jTextArea5.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea5.setEditable(false);
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jTextArea5.setText("Developed for the Data Portal project as a Java Web Start Application to help create and insert Globus proxy credentials into a MyProxy Server.  \nWritten by Glen Drinkwater.");
        jTextArea5.setWrapStyleWord(true);
        jTextArea5.setOpaque(false);
        jTextArea5.setPreferredSize(new java.awt.Dimension(260, 115));
        jTextArea5.setRequestFocusEnabled(false);
        jPanel1.add(jTextArea5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 35;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 2.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        file.setMnemonic('f');
        file.setText("File");
        file.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                fileMenuSelected(evt);
            }
        });

        lookandfeel.setMnemonic('l');
        lookandfeel.setText("Look and Feel");
        buttonGroup1.add(metal);
        metal.setMnemonic('m');
        metal.setText("Metal");
        metal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metalActionPerformed(evt);
            }
        });

        lookandfeel.add(metal);

        buttonGroup1.add(motif);
        motif.setMnemonic('o');
        motif.setText("CDE/Motif");
        motif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motifActionPerformed(evt);
            }
        });

        lookandfeel.add(motif);

        buttonGroup1.add(windows);
        windows.setMnemonic('w');
        windows.setText("Windows");
        windows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                windowsActionPerformed(evt);
            }
        });

        lookandfeel.add(windows);

        buttonGroup1.add(liquid);
        liquid.setMnemonic('l');
        liquid.setText("Liquid");
        liquid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liquidActionPerformed(evt);
            }
        });

        lookandfeel.add(liquid);

        lookandfeel.add(jSeparator3);

        buttonGroup1.add(mac);
        mac.setText("Mac");
        mac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                macActionPerformed(evt);
            }
        });

        lookandfeel.add(mac);

        buttonGroup1.add(gtk);
        gtk.setMnemonic('x');
        gtk.setSelected(true);
        gtk.setText("Linux");
        gtk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gtkActionPerformed(evt);
            }
        });

        lookandfeel.add(gtk);

        file.add(lookandfeel);

        file.add(jSeparator1);

        exit.setMnemonic('x');
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        file.add(exit);

        menu.add(file);

        configuration.setMnemonic('c');
        configuration.setText("Config");
        configuration.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuselected(evt);
            }
        });

        setup.setMnemonic('s');
        setup.setText("Setup Cog");
        setup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setupActionPerformed(evt);
            }
        });

        configuration.add(setup);

        myproxy.setMnemonic('m');
        myproxy.setText("MyProxy");
        myproxy.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                myproxyMenuSelected(evt);
            }
        });

        send.setMnemonic('s');
        send.setText("Send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        myproxy.add(send);

        retrieve.setMnemonic('r');
        retrieve.setText("Retrieve");
        retrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrieveActionPerformed(evt);
            }
        });

        myproxy.add(retrieve);

        configure.setMnemonic('c');
        configure.setText("Configure");
        configure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configureActionPerformed(evt);
            }
        });

        myproxy.add(configure);

        configuration.add(myproxy);

        configuration.add(jSeparator2);

        credentials.setMnemonic('c');
        credentials.setText("Credentials");
        changepassword.setMnemonic('p');
        changepassword.setText("Change Grid PassPhrase");
        changepassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changepasswordActionPerformed(evt);
            }
        });

        credentials.add(changepassword);

        info.setMnemonic('i');
        info.setText("Info");
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });

        credentials.add(info);

        configuration.add(credentials);

        cog.setMnemonic('P');
        cog.setText("Proxy");
        cog.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                cogMenuSelected(evt);
            }
        });

        createproxy.setMnemonic('c');
        createproxy.setText("Create");
        createproxy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createproxyActionPerformed(evt);
            }
        });

        cog.add(createproxy);

        proxyinfo.setMnemonic('i');
        proxyinfo.setText("Info");
        proxyinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxyinfoActionPerformed(evt);
            }
        });

        cog.add(proxyinfo);

        configuration.add(cog);

        menu.add(configuration);

        jMenu1.setMnemonic('h');
        jMenu1.setText("Help");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setMnemonic('a');
        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem1);

        jMenuItem2.setMnemonic('p');
        jMenuItem2.setText("Help pages");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem2);

        menu.add(jMenu1);

        setJMenuBar(menu);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-309)/2, (screenSize.height-236)/2, 309, 236);
    }
    // </editor-fold>//GEN-END:initComponents
    
    private void gtkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gtkActionPerformed
        // TODO add your handling code here:
        setLookandFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel", false);
    }//GEN-LAST:event_gtkActionPerformed
    
    private void liquidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liquidActionPerformed
        // TODO add your handling code here:
        setLookandFeel("com.birosoft.liquid.LiquidLookAndFeel", false);
    }//GEN-LAST:event_liquidActionPerformed
    
    private void macActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_macActionPerformed
        // TODO add your handling code here:
        setLookandFeel("javax.swing.plaf.mac.MacLookAndFeel", false);
    }//GEN-LAST:event_macActionPerformed
    
    private void retrieveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrieveActionPerformed
        // TODO add your handling code here:
        myget = new MyProxyGet(this,true);
        myget.setLocationRelativeTo(this);
        
        myget.show();
    }//GEN-LAST:event_retrieveActionPerformed
    
    private void cogMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_cogMenuSelected
        // TODO add your handling code here:
        if(CoGProperties.getDefault() == null) proxyinfo.setEnabled(false);
        if(!(new File(CoGProperties.getDefault().getProxyFile())).exists()) proxyinfo.setEnabled(false);
        //check if old jce is in classpath
        //check for the old version of jce in java.home/ext/lib
        if(!checkJCE){
            checkJCE = true;
            String java_home = System.getProperty("java.home");
            File jce = new File(java_home+File.separator+"lib"+File.separator+"ext"+File.separator+"jce-jdk13-117.jar");
            File jce2 = new File(java_home+"jre"+File.separator+"lib"+File.separator+"lib"+File.separator+"ext"+File.separator+"jce-jdk13-117.jar");
            
            if(jce.exists()){
                retrieve.setEnabled(false);
                send.setEnabled(false);
                createproxy.setEnabled(false);
                
                JOptionPane.showMessageDialog(this,
                        "You have an old version of the jce security classes in your java classpath.\nPlease remove "+jce.getAbsolutePath()+"\nAll java applications need to be closed before it can be removed.",
                        "Data Portal Proxy Error",
                        JOptionPane.ERROR_MESSAGE);
                
                warned = true;
                
                
            } else if(jce2.exists()){
                retrieve.setEnabled(false);
                send.setEnabled(false);
                createproxy.setEnabled(false);
                
                JOptionPane.showMessageDialog(this,
                        "You have an old version of the jce security classes in your java classpath.\nPlease remove "+jce2.getAbsolutePath()+"\nAll java applications need to be closed before it can be removed.",
                        "Data Portal Proxy Error",
                        JOptionPane.ERROR_MESSAGE);
                warned = true;
            }
        }
        if(warned){
            retrieve.setEnabled(false);
            send.setEnabled(false);
            createproxy.setEnabled(false);
        }
        
    }//GEN-LAST:event_cogMenuSelected
    
    private void changepasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changepasswordActionPerformed
        // TODO add your handling code here:
        
        /*passwd  = new MyProxyChangePassword(null,true);
        passwd.setResizable(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = 300;
        int h = 150;    //
        int x = (dim.width -w)/2;
        int y = (dim.height -h)/2;
        passwd.setBounds(x,y,w,h);
        passwd.setVisible(true);*/
        
        passwd  = new MyProxyChangePassword(this,true);
        passwd.setResizable(true);
        
        //passwd.setBounds(x,y,w,h);
        passwd.setLocationRelativeTo(this);
        passwd.setVisible(true);
        
        
    }//GEN-LAST:event_changepasswordActionPerformed
    
    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        // TODO add your handling code here:
        
        String file = CoGProperties.getDefault().getUserCertFile();
        TimeZone tz   = null;
        /*DateFormat df = null;
         
        tz = TimeZone.getTimeZone("GMT");
        df = new SimpleDateFormat("MMM dd HH:mm:ss yyyy z");
        df.setTimeZone(tz);*/
        
        X509Certificate cert = null;
        
        try {
            cert = CertUtil.loadCertificate(file);
            JOptionPane.showMessageDialog(this,"Subject:  "+cert.getSubjectDN().getName()+"\nIssuer:  "+cert.getIssuerDN().getName()+"\nStart Date:  "+cert.getNotBefore().toString()+"\nEnd Date:  "+cert.getNotAfter().toString(),"Certificate Infortmation" ,  JOptionPane.INFORMATION_MESSAGE);
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(this,"Unable to load the user certificate","Error" ,  JOptionPane.ERROR_MESSAGE);
            
            System.err.println("Unable to load the certificate : " + e.getMessage());
            
        }
        
    }//GEN-LAST:event_infoActionPerformed
    
    private void proxyinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxyinfoActionPerformed
        // TODO add your handling code here:
        //load up the proxy file ans display the proxy information
        
        
      /*  File f = new File(CertUtil.);
        byte [] data = new byte[(int)f.length()];
        FileInputStream in = new FileInputStream(f);
        // read in the credential data
        in.read(data);
        in.close();
       
        ExtendedGSSManager manager = (ExtendedGSSManager)ExtendedGSSManager.getInstance();
        GSSCredential cred = manager.createCredential(data,ExtendedGSSCredential.IMPEXP_OPAQUE, GSSCredential.DEFAULT_LIFETIME,  null,    GSSCredential.INITIATE_AND_ACCEPT);*/
        GlobusCredential proxy = null;
        String file = null;
        try {
            if (file == null) {
                file = CoGProperties.getDefault().getProxyFile();
            }
            proxy = new GlobusCredential(file);
            JOptionPane.showMessageDialog(this,"Subject:  "+proxy.getSubject()+"\nIssuer:  "+proxy.getIssuer()+"\nIdentity:  "+proxy.getIdentityCertificate().getSubjectDN().toString()+"\nTime Left:  "+Util.formatTimeSec(proxy.getTimeLeft())+"\nType:  "+CertUtil.getProxyTypeAsString(proxy.getProxyType())+"\nStrength:  "+proxy.getStrength()+" bits","Proxy Information" ,  JOptionPane.INFORMATION_MESSAGE);
            
        } catch(Exception e) {
            System.err.println("Unable to load the user proxy : " + e.getMessage());
            JOptionPane.showMessageDialog(this,"Unable to load the user proxy\n"+e.getMessage(),"Error" ,  JOptionPane.ERROR_MESSAGE);
            
        }
        
        
        
    }//GEN-LAST:event_proxyinfoActionPerformed
    
    private void createproxyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createproxyActionPerformed
        // TODO add your handling code here:
       /* grid.setSize(350, 150);
        grid.setResizable(false);
        grid.setModal(true);
        grid.setCloseOnSuccess(true);
        //grid.setRootPane(this.getOwner().get);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = grid.getSize().width;
        int h = grid.getSize().height;
        int x = (dim.width -w)/2;
        int y = (dim.height -h)/2;
        grid.setBounds(x,y,w,h);
        grid.setVisible(true);*/
        
        
        grid = new  org.globus.tools.proxy.GridProxyInit(this, true);
        
        grid.setRunAsApplication( false );
        grid.setCloseOnSuccess( true );
        grid.pack();
        
        grid.setLocationRelativeTo(this);
        //UITools.center(this, grid);
        grid.setVisible( true );
    }//GEN-LAST:event_createproxyActionPerformed
    
    private void fileMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_fileMenuSelected
        // TODO add your handling code here:
        //if myproxy fiel exist allow this
        File myproxy = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"cog.properties");
        if(myproxy.exists()){
            lookandfeel.setEnabled(true);
        } else lookandfeel.setEnabled(false);
        
        
    }//GEN-LAST:event_fileMenuSelected
    
    private void windowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_windowsActionPerformed
        // TODO add your handling code here:
        // setLookandFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel", false);
        setLookandFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel", false);
        
        
        /*try{
         
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"This Operating Sytem does not support this Look And Feel","Error" ,  JOptionPane.ERROR_MESSAGE);
        }
        lookandfeel_user = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";*/
    }//GEN-LAST:event_windowsActionPerformed
    
    private void motifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motifActionPerformed
        // TODO add your handling code here:
        setLookandFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel", false);
        //setLookandFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel", false);
      /*  try{
       
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"This Operating Sytem does not support this Look And Feel","Error" ,  JOptionPane.ERROR_MESSAGE);
        }
        lookandfeel_user = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";*/
    }//GEN-LAST:event_motifActionPerformed
    
    private void metalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metalActionPerformed
        // TODO add your handling code here:
        setLookandFeel("javax.swing.plaf.metal.MetalLookAndFeel",false);
      /*  try{
       
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"This Operating Sytem does not support this Look And Feel","Error" ,  JOptionPane.ERROR_MESSAGE);
        }*/
        // lookandfeel_user = "javax.swing.plaf.metal.MetalLookAndFeel";
        
    }//GEN-LAST:event_metalActionPerformed
    
    private void myproxyMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_myproxyMenuSelected
        // TODO add your handling code here:
        boolean isSendSelected = false;
        File myproxy = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"myproxy.properties");
        if(!myproxy.exists()){
            
            send.setEnabled(false);
            retrieve.setEnabled(false);
        } else{
            try{
                Properties prop = new Properties();
                prop.load(new FileInputStream(myproxy));
                
                String servername = prop.getProperty("server_url");
                String serverdn =prop.getProperty("server_dn");
                
                if(servername==null || serverdn==null || servername.equals("") || serverdn.equals("")){
                    //System.out.println("MyProxy configuration not complete");
                    send.setEnabled(false);
                    retrieve.setEnabled(false);
                }
                
                else {
                    send.setEnabled(true);
                    retrieve.setEnabled(true);
                }
            } catch(Exception e){
                JOptionPane.showMessageDialog(this,"Unable to read config file. \n"+new String(e.getMessage()),"Error" ,  JOptionPane.ERROR_MESSAGE);
            }
            
        }
        if(!checkJCE){
            checkJCE = true;
            String java_home = System.getProperty("java.home");
            File jce = new File(java_home+File.separator+"lib"+File.separator+"ext"+File.separator+"jce-jdk13-117.jar");
            File jce2 = new File(java_home+"jre"+File.separator+"lib"+File.separator+"lib"+File.separator+"ext"+File.separator+"jce-jdk13-117.jar");
            
            if(jce.exists()){
                retrieve.setEnabled(false);
                send.setEnabled(false);
                createproxy.setEnabled(false);
                
                JOptionPane.showMessageDialog(this,
                        "You have an old version of the jce security classes in your java classpath.\nPlease remove "+jce.getAbsolutePath()+"\nAll java applications need to be closed before it can be removed.",
                        "Data Portal Proxy Error",
                        JOptionPane.ERROR_MESSAGE);
                
                warned = true;
                
                
            } else if(jce2.exists()){
                retrieve.setEnabled(false);
                send.setEnabled(false);
                createproxy.setEnabled(false);
                
                JOptionPane.showMessageDialog(this,
                        "You have an old version of the jce security classes in your java classpath.\nPlease remove "+jce2.getAbsolutePath()+"\nAll java applications need to be closed before it can be removed.",
                        "Data Portal Proxy Error",
                        JOptionPane.ERROR_MESSAGE);
                warned = true;
            }
        }
        if(warned){
            retrieve.setEnabled(false);
            send.setEnabled(false);
            createproxy.setEnabled(false);
        }
        
    }//GEN-LAST:event_myproxyMenuSelected
    
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_formWindowGainedFocus
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_formComponentShown
    
    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_formFocusGained
    
    private void configureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configureActionPerformed
        // TODO add your handling code here:
        // Add your handling code here:
      /*  myproxydai = new MyProxyCreGUI(this,true, false);
        myproxydai.setResizable(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = 450;
        int h = 220;
        int x = (dim.width -w)/2;
        int y = (dim.height -h)/2;
        //myproxydai.setBounds(x,y,w,h);
         myproxydai.setLocationRelativeTo(this);
        myproxydai.show();*/
        
        myproxydai = new MyProxyCredentialsProperties(this,false);
        myproxydai.setResizable(true);
        
       /* Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = 450;
        int h = 220;
        int x = (dim.width -w)/2;
        int y = (dim.height -h)/2;
        //myproxydai.setBounds(x,y,w,h);*/
        myproxydai.setLocationRelativeTo(this);
        myproxydai.setVisible(true);
        //showMyProxyGUI(false);
    }//GEN-LAST:event_configureActionPerformed
    
    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
        // Add your handling code here:
        
        myinsert = new MyProxyInsert(this,true);
        
        myinsert.setLocationRelativeTo(this);
        myinsert.show();
    }//GEN-LAST:event_sendActionPerformed
    
    private void menuselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuselected
        // Add your handling code here:
        //System.out.println("menu selected");
        if(cog_properties.exists()){
            cog.setEnabled(true);
            
            // cog.setVisible(false);
            try{
                Properties prop = new Properties();
                prop.load(new FileInputStream(cog_properties));
                String proxy = prop.getProperty("proxy");
                File userkey = new File(prop.getProperty("userkey"));
                File usercert = new File(prop.getProperty("usercert"));
                File proxyfile = new File(proxy);
                
                //CoGProperties too slow on initialisation
                // File proxyfile = new File(CoGProperties.getDefault().getProxyFile());
                if(proxyfile.exists()){
                    proxyinfo.setEnabled(true);
                    myproxy.setEnabled(true);
                    credentials.setEnabled(true);
                } else {
                    proxyinfo.setEnabled(false);
                    myproxy.setEnabled(true);
                    proxyinfo.setEnabled(false);
                    //CoGProperties too slow on initialisation
                    // if((new File(CoGProperties.getDefault().getUserCertFile()).exists()) && (new File(CoGProperties.getDefault().getUserKeyFile()).exists())) credentials.setEnabled(true);
                    if(userkey.exists() && usercert.exists()) credentials.setEnabled(true);
                }
            } catch(Exception e){
                System.out.println(e);
                myproxy.setEnabled(false);
            }
            
            
        } else if(cog_dir.exists()){
            setup.setEnabled(true);
            
            
            cog.setEnabled(false);
            credentials.setEnabled(false);
            // cog.setVisible(false);
            myproxy.setEnabled(false);
            
        } else if(!cog_dir.exists()){
            credentials.setEnabled(false);
            cog.setEnabled(false);
            setup.setEnabled(true);
            // cog.setVisible(false);
            myproxy.setEnabled(false);
        }
        
    }//GEN-LAST:event_menuselected
    
    private void setupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setupActionPerformed
        // Add your handling code here:
        try{
            
            conf = new  uk.ac.dl.myproxy.ConfigurationWizard(this,true);
            // conf.setSize(460, 260);
            conf.setResizable(false);
            
            
            //   conf.setBounds(x,y,w,h);
            conf.setLocationRelativeTo(this);
            conf.setVisible(true);
        } catch(NoClassDefFoundError cnfe){
            JOptionPane.showMessageDialog(this,cnfe.getMessage()+"\nMake sure you have downloaded the Bouncy Castle jar file.","Error" ,  JOptionPane.ERROR_MESSAGE);
            
            
        }
    }//GEN-LAST:event_setupActionPerformed
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Add your handling code here:
        //myproxyhelp = new MyProxyHelp(this, true);
        //myproxyhelp.setVisible(true);
        //JOptionPane.showMessageDialog(this,"This is not available yet.","Info" ,  JOptionPane.INFORMATION_MESSAGE);
       /* if(myproxyhelp == null){
        
        
            myproxyhelp = new MyProxy_Help();
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        
            int w = 500;
            int h = 685;
            int x = (dim.width -w)/2;
            int y = (dim.height -h)/2;
            myproxyhelp.setBounds(0,0,w,h);
        }
        else if(myproxyhelp.isShowing()){return;}
        
        
        myproxyhelp.setVisible(true);*/
        
        //new loads browser
        String help = "http://tiber.dl.ac.uk:8080/myproxy/help";
        try{
            uk.ac.dl.bbsrc.util.BrowserControl.displayURL(help);
        } catch(Exception e){
            System.out.println(e);
            JOptionPane.showMessageDialog(this,"Unable to launch your browser. Please goto\n"+help,"Browser",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Add your handling code here:
        //This is the menu help section
        int i = 0;
        /*BufferedReader file = null;
        String version = "Unknown";
        try{
            file = new BufferedReader(new InputStreamReader( this.getClass().getResourceAsStream("version.txt")));
         
            version = file.readLine();
            version = (version != null) ? version : "Unknown";
            //System.out.println(version);
            file.close();
        }
        catch(Exception r){
            System.out.println(r);
            try{
            file.close();}
            catch(Exception e){}
            version = "Unknown";
         
        }*/
        JOptionPane.showMessageDialog(this,"This is a simple application that helps to\ncreate and send Globus Proxy Certificates\nto a MyProxy Server.\nThis was written for the Data Portal project at CCLRC.\nVerison 3.1","Information" ,  JOptionPane.INFORMATION_MESSAGE);
        // JOptionPane.showMessageDialog(this,"This is a simple application that helps to create and send Globus Proxy Certificates to a MyProxy Server. This was written for the Data Portal project at CCLRC. Verison 3.0.1","Information" ,  JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // Add your handling code here:
        //show the help pages
        // myproxyhelp = new myproxyhelp(this, false);
        //myproxyhelp.setVisable(true);
        JOptionPane.showMessageDialog(this,"Function not available yet","Info" ,  JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jMenu1ActionPerformed
    
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // Add your handling code here:
        // System.out.println("username is "+myproxydai.getUsername()+" password "+myproxydai.getPassword());
        //myproxydai.dispose();
        saveLookandFeel();
        
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        saveLookandFeel();
        
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    private static String formatTimeSecGlobus(long time) {
        StringBuffer str = new StringBuffer();
        long tt;
        
        tt = (time / 3600);
        if (tt == 0) {
            str.append("00");
        } else {
            if (tt < 10) str.append("0");
            str.append(tt);
            time -= tt*3600;
        }
        
        str.append(":");
        
        tt = (time / 60);
        if (tt == 0) {
            str.append("00");
        } else {
            if (tt < 10) str.append("0");
            str.append(tt);
            time -= tt*60;
        }
        
        str.append(":");
        
        if (tt == 0) {
            str.append("00");
        } else {
            if (time < 10) str.append("0");
            str.append(time);
        }
        
        return str.toString();
    }
    
    public void saveLookandFeel(){
        File myproxy = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"myproxy.properties");
        if(myproxy.exists()){
            try{
                Properties prop = new Properties();
                prop.load(new FileInputStream(myproxy));
                prop.setProperty("lookandfeel", lookandfeel_user);
                FileOutputStream out = new FileOutputStream(myproxy);
                prop.store(out,"Myproxy");
                out.close();
            } catch(Exception e){
                System.out.println("Unable to save look and feel of user\n "+e);
            }
        } else {
            try{
                Properties prop = new Properties();
                
                prop.setProperty("lookandfeel", lookandfeel_user);
                FileOutputStream out = new FileOutputStream(myproxy);
                prop.store(out,"Myproxy");
                out.close();
            } catch(Exception e){
                System.out.println("Unable to save look and feel of user\n "+e);
            }
        }
        
    }
    /**
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new MyProxyMain().show();
    }
    
    /*public void showMyProxyGUI(boolean show){
        myproxydai = new MyProxyGUI(this,true, show);
        myproxydai.setResizable(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = 450;
        int h = 220;
        int x = (dim.width -w)/2;
        int y = (dim.height -h)/2;
        //myproxydai.setBounds(x,y,w,h);
        myproxydai.setLocationRelativeTo(this);
        myproxydai.show();
     
    }*/
    
    public void setLookandFeel(String _userlaf, boolean init){
        
        String default_userlaf = UIManager.getSystemLookAndFeelClassName();
        if(_userlaf == null) _userlaf = default_userlaf;
        
        File myproxy = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"myproxy.properties");
        if(myproxy.exists() && init){
            try{
                Properties prop = new Properties();
                prop.load(new FileInputStream(myproxy));
                _userlaf = prop.getProperty("lookandfeel",default_userlaf);
            } catch(Exception e){
                System.out.println(e);
                _userlaf = default_userlaf;
            }
        }
        
        try{
            UIManager.setLookAndFeel(_userlaf);
            SwingUtilities.updateComponentTreeUI(this);
        } catch(Exception e){
            JOptionPane.showMessageDialog(this,"This Look and Feel is not supported","Error" ,  JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
            try{
                /*UIManager.setLookAndFeel(default_userlaf);
                SwingUtilities.updateComponentTreeUI(this);*/
                _userlaf = lookandfeel_user;
            } catch(Exception ei){
                
            }
            //JOptionPane.showMessageDialog(this,"This Operating Sytem does not support this Look And Feel","Error" ,  JOptionPane.ERROR_MESSAGE);
        }
        
        //set the radio buttong checked
        if(_userlaf.equalsIgnoreCase("javax.swing.plaf.metal.MetalLookAndFeel")) {
            //metal.doClick();
            metal.setSelected(true);
            
        } else if(_userlaf.equalsIgnoreCase("com.sun.java.swing.plaf.motif.MotifLookAndFeel")){
            //motif.doClick();
            motif.setSelected(true);
        } else if(_userlaf.equalsIgnoreCase("com.sun.java.swing.plaf.windows.WindowsLookAndFeel")){
            //windows.doClick();
            windows.setSelected(true);
        } else if(_userlaf.equalsIgnoreCase("com.birosoft.liquid.LiquidLookAndFeel")){
            //windows.doClick();
            liquid.setSelected(true);
            jMenuItem1.setEnabled(false);
        } else if(_userlaf.equalsIgnoreCase("javax.swing.plaf.mac.MacLookAndFeel")){
            //windows.doClick();
            mac.setSelected(true);
        } else if(_userlaf.equalsIgnoreCase("com.sun.java.swing.plaf.gtk.GTKLookAndFeel")){
            //windows.doClick();
            gtk.setSelected(true);
        }
        if(!_userlaf.equalsIgnoreCase("com.birosoft.liquid.LiquidLookAndFeel")) jMenuItem1.setEnabled(true);
        lookandfeel_user = _userlaf;
    }
    
    protected boolean isAvailableLookAndFeel(String laf) {
        try {
            Class lnfClass = Class.forName(laf);
            LookAndFeel newLAF = (LookAndFeel)(lnfClass.newInstance());
            return newLAF.isSupportedLookAndFeel();
        } catch(Exception e) { // If ANYTHING weird happens, return false
            return false;
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem changepassword;
    private javax.swing.JMenu cog;
    private javax.swing.JMenu configuration;
    private javax.swing.JMenuItem configure;
    private javax.swing.JMenuItem createproxy;
    private javax.swing.JMenu credentials;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JRadioButtonMenuItem gtk;
    private javax.swing.JMenuItem info;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JRadioButtonMenuItem liquid;
    private javax.swing.JMenu lookandfeel;
    private javax.swing.JRadioButtonMenuItem mac;
    private javax.swing.JMenuBar menu;
    private javax.swing.JRadioButtonMenuItem metal;
    private javax.swing.JRadioButtonMenuItem motif;
    private javax.swing.JMenu myproxy;
    private javax.swing.JMenuItem proxyinfo;
    private javax.swing.JMenuItem retrieve;
    private javax.swing.JMenuItem send;
    private javax.swing.JMenuItem setup;
    private javax.swing.JRadioButtonMenuItem windows;
    // End of variables declaration//GEN-END:variables
    
}
