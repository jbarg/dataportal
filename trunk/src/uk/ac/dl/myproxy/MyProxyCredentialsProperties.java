/*
 * MyProxyCredentialsProperties.java
 *
 * Created on 18 May 2004, 15:57
 */

package uk.ac.dl.myproxy;

import java.io.*;
import java.util.*;
import javax.swing.*;
import java.awt.event.KeyListener;

/**
 *
 * @author  gjd37
 */
public class MyProxyCredentialsProperties extends javax.swing.JDialog implements KeyListener {
    
    
    private String _cred_lifetime = "168";
    private String _strength = "512";
    private String _proxy_lifetime  = "2";
    private String _dn = null;
    private String _url = null;
    private String _port = null;
    
    /** Creates new form MyProxyCredentialsProperties */
    public MyProxyCredentialsProperties(javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        addKeyListener(this);
        
        setSelected();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        proxylifetime_group = new javax.swing.ButtonGroup();
        strength_group = new javax.swing.ButtonGroup();
        credential_lifetime = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lifetime = new javax.swing.JLabel();
        strength = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        c12 = new javax.swing.JRadioButton();
        c24 = new javax.swing.JRadioButton();
        c168 = new javax.swing.JRadioButton();
        c672 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        s512 = new javax.swing.JRadioButton();
        s1024 = new javax.swing.JRadioButton();
        s2048 = new javax.swing.JRadioButton();
        s4096 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        serverurl = new javax.swing.JTextField();
        serverdn = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        serverport = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        p1 = new javax.swing.JRadioButton();
        p2 = new javax.swing.JRadioButton();
        p10 = new javax.swing.JRadioButton();
        p24 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Cancel = new javax.swing.JButton();
        Ok = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Properties");
        getAccessibleContext().setAccessibleParent(this);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("MyProxy Server Properties"));
        jPanel1.setMinimumSize(new java.awt.Dimension(445, 180));
        jPanel1.setPreferredSize(new java.awt.Dimension(440, 210));
        lifetime.setText(" Credential Lifetime       ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(lifetime, gridBagConstraints);

        strength.setText(" Proxy Strength (bits)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(strength, gridBagConstraints);

        credential_lifetime.add(c12);
        c12.setSelected(true);
        c12.setText("12 h");
        c12.setActionCommand("12");
        c12.setFocusable(false);
        c12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c12ActionPerformed(evt);
            }
        });

        jPanel2.add(c12);

        credential_lifetime.add(c24);
        c24.setText("24 h");
        c24.setActionCommand("24");
        c24.setFocusable(false);
        c24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c24ActionPerformed(evt);
            }
        });

        jPanel2.add(c24);

        credential_lifetime.add(c168);
        c168.setText("1 week");
        c168.setActionCommand("672");
        c168.setFocusable(false);
        c168.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c168ActionPerformed(evt);
            }
        });

        jPanel2.add(c168);

        credential_lifetime.add(c672);
        c672.setText("1 month");
        c672.setActionCommand("168");
        c672.setFocusable(false);
        c672.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c672ActionPerformed(evt);
            }
        });

        jPanel2.add(c672);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel2, gridBagConstraints);

        strength_group.add(s512);
        s512.setSelected(true);
        s512.setText("512 ");
        s512.setFocusable(false);
        s512.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        s512.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s512ActionPerformed(evt);
            }
        });

        jPanel3.add(s512);

        strength_group.add(s1024);
        s1024.setText("1024  ");
        s1024.setFocusable(false);
        s1024.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1024ActionPerformed(evt);
            }
        });

        jPanel3.add(s1024);

        strength_group.add(s2048);
        s2048.setText("2048");
        s2048.setFocusable(false);
        s2048.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s2048ActionPerformed(evt);
            }
        });

        jPanel3.add(s2048);

        strength_group.add(s4096);
        s4096.setText("4096  ");
        s4096.setFocusable(false);
        s4096.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s4096ActionPerformed(evt);
            }
        });

        jPanel3.add(s4096);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel3, gridBagConstraints);

        jLabel5.setText(" Server Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel5, gridBagConstraints);

        serverurl.setText("myproxy.grid-support.ac.uk");
        serverurl.setNextFocusableComponent(serverdn);
        serverurl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                serverurlKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel1.add(serverurl, gridBagConstraints);

        serverdn.setText("/C=UK/O=eScience/OU=CLRC/L=DL/CN=host/myproxy.grid-support.ac.uk/E=a.j.richards@dl.ac.uk");
        serverdn.setNextFocusableComponent(serverport);
        serverdn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                serverdnKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel1.add(serverdn, gridBagConstraints);

        jLabel6.setText(" Server DN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setText(" Server Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel7, gridBagConstraints);

        serverport.setText("7512");
        serverport.setNextFocusableComponent(Ok);
        serverport.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                serverportKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel1.add(serverport, gridBagConstraints);

        jPanel4.setPreferredSize(new java.awt.Dimension(255, 33));
        proxylifetime_group.add(p1);
        p1.setText("1 h   ");
        p1.setFocusable(false);
        p1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1ActionPerformed(evt);
            }
        });

        jPanel4.add(p1);

        proxylifetime_group.add(p2);
        p2.setSelected(true);
        p2.setText("2 h  ");
        p2.setFocusable(false);
        p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2ActionPerformed(evt);
            }
        });

        jPanel4.add(p2);

        proxylifetime_group.add(p10);
        p10.setText("10 h    ");
        p10.setFocusable(false);
        p10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p10ActionPerformed(evt);
            }
        });

        jPanel4.add(p10);

        proxylifetime_group.add(p24);
        p24.setText("24 h ");
        p24.setFocusable(false);
        p24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p24ActionPerformed(evt);
            }
        });

        jPanel4.add(p24);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jPanel4, gridBagConstraints);

        jLabel8.setText(" Proxy Lifetime");
        jLabel8.setToolTipText("Maximum lifetime of a Proxy retieved from MyProxy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        jPanel1.add(jLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        jPanel1.add(jLabel14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        getContentPane().add(jPanel1, gridBagConstraints);

        Cancel.setMnemonic('c');
        Cancel.setText("Cancel");
        Cancel.setNextFocusableComponent(Ok);
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        Cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CancelKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        getContentPane().add(Cancel, gridBagConstraints);

        Ok.setMnemonic('o');
        Ok.setText("Ok");
        Ok.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.white, java.awt.Color.black, java.awt.Color.darkGray));
        Ok.setContentAreaFilled(false);
        Ok.setNextFocusableComponent(Cancel);
        Ok.setPreferredSize(new java.awt.Dimension(67, 25));
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });
        Ok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                OkKeyPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        getContentPane().add(Ok, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 15);
        getContentPane().add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 74, 5, 74);
        getContentPane().add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 18, 5, 18);
        getContentPane().add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        getContentPane().add(jLabel12, gridBagConstraints);

        pack();
    }//GEN-END:initComponents
    
    private void serverportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serverportKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) Ok.doClick();
    }//GEN-LAST:event_serverportKeyPressed
    
    private void serverdnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serverdnKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) Ok.doClick();
    }//GEN-LAST:event_serverdnKeyPressed
    
    private void serverurlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serverurlKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) Ok.doClick();
    }//GEN-LAST:event_serverurlKeyPressed
    
    private void CancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CancelKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) Cancel.doClick();
    }//GEN-LAST:event_CancelKeyPressed
    
    private void OkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OkKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyText(evt.getKeyCode()).equals("Enter")) Ok.doClick();
    }//GEN-LAST:event_OkKeyPressed
    
    private void p24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p24ActionPerformed
        // TODO add your handling code here:
        _proxy_lifetime = "24";
    }//GEN-LAST:event_p24ActionPerformed
    
    private void p10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p10ActionPerformed
        // TODO add your handling code here:
        _proxy_lifetime = "10";
    }//GEN-LAST:event_p10ActionPerformed
    
    private void p2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2ActionPerformed
        // TODO add your handling code here:
        _proxy_lifetime = "2";
    }//GEN-LAST:event_p2ActionPerformed
    
    private void p1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1ActionPerformed
        // TODO add your handling code here:
        _proxy_lifetime = "1";
    }//GEN-LAST:event_p1ActionPerformed
    
    private void s4096ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s4096ActionPerformed
        // TODO add your handling code here:
        _strength = "4096";
        
    }//GEN-LAST:event_s4096ActionPerformed
    
    private void s2048ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s2048ActionPerformed
        // TODO add your handling code here:
        _strength = "2048";
        
    }//GEN-LAST:event_s2048ActionPerformed
    
    private void s1024ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1024ActionPerformed
        // TODO add your handling code here:
        _strength = "1024";
        
    }//GEN-LAST:event_s1024ActionPerformed
    
    private void s512ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s512ActionPerformed
        // TODO add your handling code here:
        _strength = "512";
        // System.out.println("Strength is "+_strength);
    }//GEN-LAST:event_s512ActionPerformed
    
    private void c168ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c168ActionPerformed
        // TODO add your handling code here:
        _cred_lifetime = "168";
    }//GEN-LAST:event_c168ActionPerformed
    
    private void c672ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c672ActionPerformed
        // TODO add your handling code here:
        _cred_lifetime = "672";
    }//GEN-LAST:event_c672ActionPerformed
    
    private void c12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c12ActionPerformed
        // TODO add your handling code here:
        _cred_lifetime = "12";
    }//GEN-LAST:event_c12ActionPerformed
    
    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CancelActionPerformed
    
    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        // TODO add your handling code here:
        File myproxy = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"myproxy.properties");
        
        try{
            getText();
        } catch(NullPointerException e){
            
            JOptionPane.showMessageDialog(this,"Server Name and/or Server DN cannot be empty.","Need More Information" ,  JOptionPane.WARNING_MESSAGE);
            return;
        } catch(NumberFormatException e){
            serverport.setText("");
            
            JOptionPane.showMessageDialog(this,"Server Port must be a integer.","Need More Information" ,  JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try{
            
            
            Properties prop = new Properties();
            if(myproxy.exists()) {
                // if(myproxy.createNewFile()) System.out.println(myproxy.toString()+" has been created");;
                
                prop.load(new FileInputStream(myproxy));
            }
            
            
            prop.setProperty("proxy_strength",  _strength);
            prop.setProperty("proxy_lifetime",  _proxy_lifetime);
            prop.setProperty("credential_lifetime",  _cred_lifetime);
            prop.setProperty("server_dn",  _dn);
            
            prop.setProperty("server_port",  _port);
            prop.setProperty("server_url",  _url);
            
            
            FileOutputStream out = new FileOutputStream(myproxy);
            prop.store(out,"Myproxy");
            out.close();
        } catch(Exception er){
            System.out.println("Unable to save myproxy.properties file\n"+er);
            er.printStackTrace();
        }
        //do something then set visiabel false
        
        dispose();
    }//GEN-LAST:event_OkActionPerformed
    
    private void c24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c24ActionPerformed
        // TODO add your handling code here:
        _cred_lifetime = "24";
        
    }//GEN-LAST:event_c24ActionPerformed
    
    private void getText() throws NullPointerException, NumberFormatException{
        
        _port = serverport.getText();
        Integer.parseInt(_port);
        _dn = serverdn.getText();
        _url = serverurl.getText();
        if(_url.equals("") || _dn.equals("")) throw new NullPointerException();
    }
    
    private void setSelected(){
        File myproxy = new File(System.getProperty("user.home")+File.separator+".globus"+File.separator+"myproxy.properties");
        
        if(!myproxy.exists()){
            System.out.println("MyProxy Properties not detected!");
            c168.setSelected(true);
            s512.setSelected(true);
            p2.setSelected(true);
        } else {
            
            try{
                Properties prop = new Properties();
                prop.load(new FileInputStream(myproxy));
                _strength = prop.getProperty("proxy_strength","512");
                _cred_lifetime = prop.getProperty("credential_lifetime","168");
                _proxy_lifetime = prop.getProperty("proxy_lifetime","2");
                if(_strength.equals("512")) s512.setSelected(true);
                if(_strength.equals("1024")) s1024.setSelected(true);
                if(_strength.equals("2048")) s2048.setSelected(true);
                if(_strength.equals("4096")) s4096.setSelected(true);
                if(_proxy_lifetime.equals("1")) p1.setSelected(true);
                if(_proxy_lifetime.equals("2")) p2.setSelected(true);
                if(_proxy_lifetime.equals("10")) p10.setSelected(true);
                if(_proxy_lifetime.equals("24")) p24.setSelected(true);
                if(_cred_lifetime.equals("12")) c12.setSelected(true);
                if(_cred_lifetime.equals("24")) c24.setSelected(true);
                if(_cred_lifetime.equals("168")) c168.setSelected(true);
                if(_cred_lifetime.equals("672")) c672.setSelected(true);
                
                //set the fields
                serverdn.setText(prop.getProperty("server_dn","/C=UK/O=eScience/OU=CLRC/L=DL/CN=host/myproxy.grid-support.ac.uk/E=a.j.richards@dl.ac.uk"));
                serverport.setText(prop.getProperty("server_port","7512"));
                serverurl.setText(prop.getProperty("server_url","myproxy.grid-support.ac.uk"));
                
            } catch(Exception e){
                System.out.println("Unable to load myproxy.properties file");
                c168.setSelected(true);
                s512.setSelected(true);
                p2.setSelected(true);
            }
            
        }
        
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new MyProxyCredentialsProperties(new javax.swing.JFrame(), true).setVisible(true);
    }
    
    public void keyPressed(java.awt.event.KeyEvent e) {
        
        //System.out.println("pressed");
        if(Ok.hasFocus()) Ok.doClick();
        if(Cancel.hasFocus()) Cancel.doClick();
    }
    
    public void keyReleased(java.awt.event.KeyEvent e) {
    }
    
    public void keyTyped(java.awt.event.KeyEvent e) {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Ok;
    private javax.swing.JRadioButton c12;
    private javax.swing.JRadioButton c168;
    private javax.swing.JRadioButton c24;
    private javax.swing.JRadioButton c672;
    private javax.swing.ButtonGroup credential_lifetime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lifetime;
    private javax.swing.JRadioButton p1;
    private javax.swing.JRadioButton p10;
    private javax.swing.JRadioButton p2;
    private javax.swing.JRadioButton p24;
    private javax.swing.ButtonGroup proxylifetime_group;
    private javax.swing.JRadioButton s1024;
    private javax.swing.JRadioButton s2048;
    private javax.swing.JRadioButton s4096;
    private javax.swing.JRadioButton s512;
    private javax.swing.JTextField serverdn;
    private javax.swing.JTextField serverport;
    private javax.swing.JTextField serverurl;
    private javax.swing.JLabel strength;
    private javax.swing.ButtonGroup strength_group;
    // End of variables declaration//GEN-END:variables
    
}
